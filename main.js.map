{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authGuard/auth.guard.ts","./src/app/authGuard/auth.interceptor.ts","./src/app/classes/account.model.ts","./src/app/classes/boardTask.model.ts","./src/app/classes/comment.model.ts","./src/app/classes/project.model.ts","./src/app/classes/task.model.ts","./src/app/classes/user.model.ts","./src/app/components/comment/comment.component.ts","./src/app/components/comment/comment.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/helpers/toggle/toggle.component.ts","./src/app/components/helpers/toggle/toggle.component.html","./src/app/components/main/_main/main.component.ts","./src/app/components/main/_main/main.component.html","./src/app/components/main/board/_board/board.component.ts","./src/app/components/main/board/_board/board.component.html","./src/app/components/main/main-menu/main-menu.component.ts","./src/app/components/main/main-menu/main-menu.component.html","./src/app/components/main/personal/personal.component.ts","./src/app/components/main/personal/personal.component.html","./src/app/components/main/personal/tasks-executor/tasks-executor.component.ts","./src/app/components/main/personal/tasks-executor/tasks-executor.component.html","./src/app/components/main/user/sign-in/sign-in.component.ts","./src/app/components/main/user/sign-in/sign-in.component.html","./src/app/components/main/user/sign-up/sign-up.component.ts","./src/app/components/main/user/sign-up/sign-up.component.html","./src/app/components/main/user/user.component.ts","./src/app/components/main/user/user.component.html","./src/app/components/task/boardTask/boardTask.component.ts","./src/app/components/task/boardTask/boardTask.component.html","./src/app/components/task/task-form/task-form.component.ts","./src/app/components/task/task-form/task-form.component.html","./src/app/components/task/task/task.component.ts","./src/app/components/task/task/task.component.html","./src/app/components/task/user-task/user-task.component.ts","./src/app/components/task/user-task/user-task.component.html","./src/app/components/user-project/user-project.component.ts","./src/app/components/user-project/user-project.component.html","./src/app/enums/priority.enum.ts","./src/app/enums/status.enums.ts","./src/app/services/comment.service.ts","./src/app/services/enum-to-arr.pipe.ts","./src/app/services/hash-tag.service.ts","./src/app/services/project.service.ts","./src/app/services/shared-event.service.ts","./src/app/services/task-manager.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { PersonalComponent } from './components/main/personal/personal.component';\r\nimport { BoardComponent } from './components/main/board/_board/board.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MainComponent } from './components/main/_main/main.component';\r\nimport { UserComponent } from './components/main/user/user.component';\r\nimport { SignUpComponent } from './components/main/user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './components/main/user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './authGuard/auth.guard';\r\n\r\n// Настройки роутинга.\r\nconst routes: Routes = [\r\n  {\r\n    path: 'sign-up',\r\n    component: UserComponent,\r\n    children: [{ path: '', component: SignUpComponent }],\r\n  },\r\n  {\r\n    path: 'sign-in',\r\n    component: UserComponent,\r\n    children: [{ path: '', component: SignInComponent }],\r\n  },\r\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\r\n  {\r\n    path: 'main',\r\n    component: MainComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'board', component: BoardComponent },\r\n      { path: 'personal', component: PersonalComponent },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\n\r\n// Роутинг.\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Gates';\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-header></app-header>\r\n  <div class=\"main-container\">\r\n    <app-main-menu></app-main-menu>\r\n    <app-main></app-main>\r\n  </div>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { EnumToArrayPipe } from './services/enum-to-arr.pipe';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { SignUpComponent } from './components/main/user/sign-up/sign-up.component';\r\nimport { UserService } from './services/user.service';\r\nimport { UserComponent } from './components/main/user/user.component';\r\nimport { SignInComponent } from './components/main/user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './authGuard/auth.guard';\r\nimport { AuthInterceptor } from './authGuard/auth.interceptor';\r\n\r\nimport { BoardTaskComponent } from './components/task/boardTask/boardTask.component';\r\nimport { TaskComponent } from './components/task/task/task.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MainComponent } from './components/main/_main/main.component';\r\nimport { MainMenuComponent } from './components/main/main-menu/main-menu.component';\r\nimport { BoardComponent } from './components/main/board/_board/board.component';\r\nimport { PersonalComponent } from './components/main/personal/personal.component';\r\nimport { UserTaskComponent } from './components/task/user-task/user-task.component';\r\nimport { TaskFormComponent } from './components/task/task-form/task-form.component';\r\nimport { UserProjectComponent } from './components/user-project/user-project.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { from } from 'rxjs';\r\nimport { CommentComponent } from './components/comment/comment.component';\r\nimport { TasksExecutorComponent } from './components/main/personal/tasks-executor/tasks-executor.component';\r\nimport { ToggleComponent } from './components/helpers/toggle/toggle.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    UserComponent,\r\n    SignInComponent,\r\n    BoardTaskComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MainComponent,\r\n    MainMenuComponent,\r\n    BoardComponent,\r\n    TaskComponent,\r\n    PersonalComponent,\r\n    UserTaskComponent,\r\n    TaskFormComponent,\r\n    EnumToArrayPipe,\r\n    UserProjectComponent,\r\n    CommentComponent,\r\n    TasksExecutorComponent,\r\n    ToggleComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n// Сервис представляет защиту доступа к сайту.\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  // при наличии токена дает возможность перемещаться по сайту, иначе перенаправляет на модуль авторизации\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (localStorage.getItem('token') != null) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/main/sign-in']);\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\n\r\n// Перехватчик запросов.\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router) {}\r\n\r\n  // Перехватывает запросы пользователя, проверяя на наличие токена.\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.headers.get('No-Auth') === 'True') {\r\n      return next.handle(req.clone());\r\n    }\r\n\r\n    if (localStorage.getItem('token') != null) {\r\n      const clonedreq = req.clone({\r\n        headers: req.headers.set(\r\n          'Authorization',\r\n          `Bearer ${localStorage.getItem('token')}`\r\n        ),\r\n      });\r\n      return next.handle(clonedreq);\r\n    } else {\r\n      this.router.navigateByUrl('/sign-in');\r\n    }\r\n  }\r\n}\r\n","// Модель аккаунт\r\nexport class AccountModel {\r\n  UserName: string;\r\n  Password: string;\r\n}\r\n","//Класс представляет модель задания для вывода на доску.\r\nexport class BoardTaskModel {\r\n  // Id задания.\r\n  TaskId: number;\r\n\r\n  // Название задания.\r\n  Title: string;\r\n\r\n  // Автор задания.\r\n  AuthorLogin: string;\r\n\r\n  // Описание задания.\r\n  Description: string;\r\n\r\n  // Группа задания.\r\n  Project: string;\r\n\r\n  // Дата дедлайна.\r\n  DeadlineDate: Date;\r\n\r\n  // Приоритет задания.\r\n  Priority: string = 'Trivial';\r\n\r\n  // Статус задания.\r\n  Status: string;\r\n}\r\n","// Модель комментарий\r\nexport class CommentModel {\r\n  CommentId: number;\r\n  Login: string;\r\n  TaskId: number;\r\n  Content: string;\r\n  CreateDate: Date;\r\n}\r\n","// Модель проект\r\nexport class ProjectModel {\r\n  ProjectId: number;\r\n  Title: string;\r\n  CreateDate: Date;\r\n  AuthorId: string;\r\n}\r\n","//Класс представляет модель задания.\r\nexport class TaskModel {\r\n  // Уникальный идентификатор задания.\r\n  TaskId: number;\r\n\r\n  // Название задания.\r\n  Title: string;\r\n\r\n  // Описание задания.\r\n  Description: string;\r\n\r\n  // Автор задания.\r\n  AuthorLogin: string;\r\n\r\n  // Испольнитель задания\r\n  ExecutorLogin: string;\r\n\r\n  // Группа задания.\r\n  ProjectId: number;\r\n\r\n  //Дата создания.\r\n  CreateDate: Date;\r\n\r\n  // Дата дедлайна.\r\n  DeadlineDate: Date;\r\n\r\n  // Подзадача.\r\n  UnderTask: TaskModel[];\r\n\r\n  // Приоритет задания.\r\n  Priority: string = 'Trivial';\r\n\r\n  // Статус задания.\r\n  Status: string = 'Await';\r\n\r\n  // Хэш-теги.\r\n  HashTags: string[];\r\n\r\n  // Комментарий.\r\n  Comments: string;\r\n}\r\n","import { AccountModel } from './account.model';\r\n\r\n// Модель пользователь\r\nexport class UserModel {\r\n\r\n  Login: string;\r\n  FirstName: string;\r\n  LastName: string;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","import { CommentService } from './../../services/comment.service';\r\nimport { CommentModel } from './../../classes/comment.model';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  EventEmitter,\r\n  Output,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comment',\r\n  templateUrl: './comment.component.html',\r\n  styleUrls: ['./comment.component.scss'],\r\n})\r\n\r\n// Компонет комментарии задачи.\r\nexport class CommentComponent implements OnInit {\r\n  // Входное свойство - комментарий.\r\n  @Input() comment: CommentModel;\r\n  // Выходное событие - обновление комментариев.\r\n  @Output() updateComments = new EventEmitter();\r\n\r\n  @ViewChild('textArea', { read: ElementRef }) textArea: ElementRef;\r\n\r\n  // Флаг - отображение кнопок edit и delete.\r\n  showControls: boolean;\r\n  // Флаг - отображение кнопки send.\r\n  showSend: boolean;\r\n  // Флаг - только для чтения.\r\n  readonly: boolean;\r\n  // Флаг - редактирования формы комментария.\r\n  editContent: boolean;\r\n\r\n  constructor(private commentService: CommentService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.readonly = true;\r\n    const userName = localStorage.getItem('username');\r\n    this.showControls = userName === this.comment.Login;\r\n  }\r\n\r\n  // Редактирование комментария.\r\n  editComment() {\r\n    // Получение DOM элемента textarea для фокуса курсора. Пока не реализовано.\r\n    const taxtAreaElement = this.textArea;\r\n\r\n    this.readonly = false;\r\n    this.showSend = true;\r\n    this.editContent = true;\r\n  }\r\n\r\n  saveComment() {\r\n    this.commentService.updateComment(this.comment).subscribe(() => {\r\n      // Событие - обновление комментария.\r\n      this.updateComments.emit();\r\n    });\r\n  }\r\n\r\n  // Удаление комментария.\r\n  deleteComment() {\r\n    this.commentService\r\n      .deleteComment(this.comment.CommentId)\r\n      .subscribe((data) => {\r\n        // Событие - обновление комментария.\r\n        this.updateComments.emit();\r\n      });\r\n  }\r\n}\r\n","<div class=\"comment-container\">\r\n  <div class=\"comment-footer\">\r\n    <p class=\"author\">{{ comment.Login }}</p>\r\n    <p class=\"date\">{{ comment.CreateDate | date: \"mediumDate\" }}</p>\r\n    <div class=\"comment-controls\">\r\n      <a *ngIf=\"showSend\" class=\"icon save\" (click)=\"saveComment()\" title=\"Save\"></a>\r\n      <a *ngIf=\"showControls\" class=\"icon edit\" (click)=\"editComment()\" title=\"Edit\"></a>\r\n      <a *ngIf=\"showControls\" class=\"icon delete\" (click)=\"deleteComment()\" title=\"Delete\"></a>\r\n    </div>\r\n  </div>\r\n  <textarea\r\n    #textArea\r\n    class=\"content\"\r\n    [readonly]=\"readonly\"\r\n    [ngClass]=\"{ edit_content: editContent }\"\r\n    [(ngModel)]=\"comment.Content\"\r\n    ></textarea\r\n  >\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss'],\r\n})\r\n\r\n// Компонент footer\r\nexport class FooterComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<footer class=\"footer wrapper\"></footer>\r\n","import { SharedEventService } from './../../services/shared-event.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { stringify } from '@angular/compiler/src/util';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\n\r\n// Компонент header\r\nexport class HeaderComponent implements OnInit {\r\n  // Имя пользователя.\r\n  userName: string;\r\n\r\n  constructor(private sharedEventService: SharedEventService) {\r\n    // Подписка на событие - назначение логина.\r\n    this.sharedEventService.userNameEmitted$.subscribe((userName) => {\r\n      this.userName = userName;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userName = localStorage.getItem('username') ?? '';\r\n  }\r\n}\r\n","<header class=\"header wrapper\">\r\n  <div>\r\n    <h1 class=\"header-text\">Gates</h1>\r\n    <h3 class=\"header-text user-name\">{{ userName }}</h3>\r\n  </div>\r\n</header>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-toggle',\r\n  templateUrl: './toggle.component.html',\r\n  styleUrls: ['./toggle.component.scss']\r\n})\r\nexport class ToggleComponent implements OnInit {\r\n\r\n  // Выходное свойство - состояние checkbox\r\n  @Output() checked = new EventEmitter();\r\n  // флаг - выбор чекбокса.\r\n  check: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // Переключение чекбокса при клике и передача состояния на выход.\r\n  onClick() {\r\n    this.check = !this.check;\r\n    this.checked.emit(this.check);\r\n  }\r\n}\r\n","<label class=\"switch\">\r\n    <input type=\"checkbox\">\r\n    <span class=\"slider round\" (click)=\"onClick()\"></span>\r\n  </label>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\n\r\n// Основной компонент.\r\nexport class MainComponent implements OnInit {\r\n\r\n  // Флаг - аккаунт залогинен.\r\n  isLogged: boolean;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<main class=\"main\">\r\n  <div class=\"main-body\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</main>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BoardTaskModel } from 'src/app/classes/boardTask.model';\r\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { TaskModel } from 'src/app/classes/task.model';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss'],\r\n})\r\n\r\n// Компонент - доска для вывода задач.\r\nexport class BoardComponent implements OnInit {\r\n  constructor(private taskManagerService: TaskManagerService) {}\r\n\r\n  // Массив с задачами.\r\n  boardTasks: BoardTaskModel[] = [];\r\n  // Флаг - показать окно детализации задачи.\r\n  showTaskDetail: boolean;\r\n  // Задача для вывода детализации.\r\n  task: TaskModel;\r\n  // Флаг - показать/скрыть загрузку\r\n  loading: boolean;\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.showTaskDetail = false;\r\n    this.loading = true;\r\n\r\n    // Запрос на получение всех задач.\r\n    this.taskManagerService\r\n      .getBoardTasks()\r\n      .subscribe((data: BoardTaskModel[]) => {\r\n        if (data) {\r\n          this.boardTasks = data;\r\n          this.loading = false;\r\n        }\r\n      }),\r\n      (error: any) => {\r\n        alert('Something wrong!');\r\n        this.loading = false;\r\n      };\r\n  }\r\n\r\n  // Метод получает задачу по id.\r\n  getTaskById(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        this.task = data;\r\n        this.showTaskDetail = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Закрытие детализации задачи.\r\n  closeTaskDetail() {\r\n    this.showTaskDetail = false;\r\n  }\r\n}\r\n","<div class=\"board\">\r\n  <div>\r\n    <app-task\r\n      *ngIf=\"showTaskDetail\"\r\n      class=\"task-detail\"\r\n      (close)=\"closeTaskDetail()\"\r\n      [task]=\"task\"\r\n    ></app-task>\r\n  </div>\r\n\r\n  <!-- Фильтрация не реализована. -->\r\n  <!-- <div class=\"board__filter-bar\">\r\n    <input class=\"filter-input\" />\r\n  </div> -->\r\n  \r\n  <div class=\"task-container\">\r\n    <img *ngIf=\"loading\" class=\"loading\" src=\"../../../../../assets/image/animation/loading.gif\">\r\n    <div class=\"task-container_wrapper\">\r\n    <app-board-task\r\n      *ngFor=\"let task of boardTasks\"\r\n      (taskIdEmitter)=\"getTaskById($event)\"\r\n      [boardTask]=\"task\"\r\n    ></app-board-task>\r\n  </div>\r\n  </div>\r\n</div>\r\n","import { SharedEventService } from './../../../services/shared-event.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.scss'],\r\n})\r\n\r\n// Компонент главное меню.\r\nexport class MainMenuComponent implements OnInit {\r\n\r\n  // Флаг - пользователь залогинен.\r\n  isLogged: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private sharedEventService: SharedEventService\r\n  ) {\r\n    // Подписка на событие Клик Sign-in.\r\n    sharedEventService.changeEmitted$.subscribe((logged) =>\r\n      this.signIn(logged)\r\n    );\r\n  }\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.isLogged = localStorage.getItem('token') ? true : false;\r\n  }\r\n\r\n  // Навигация на доску.\r\n  toBoard() {\r\n    this.router.navigate(['main/board']);\r\n  }\r\n\r\n  // Навигация на кабинет.\r\n  toPersonal() {\r\n    this.router.navigate(['main/personal']);\r\n  }\r\n\r\n  // Выход пользователя из системы.\r\n  signOut() {\r\n    this.isLogged = false;\r\n    localStorage.clear();\r\n    this.router.navigate(['sign-in']);\r\n    this.sharedEventService.getUserName('');\r\n  }\r\n\r\n  // Вход пользователя в систему.\r\n  signIn(logged: boolean) {\r\n    this.isLogged = logged;\r\n  }\r\n}\r\n","<div class=\"main-menu\">\r\n  <div class=\"main-menu__button\" (click)=\"toBoard()\">\r\n    <a class=\"main-menu__button__text\">Board</a>\r\n  </div>\r\n  <div class=\"main-menu__button\" (click)=\"toPersonal()\">\r\n    <a class=\"main-menu__button__text\">Cabinet</a>\r\n  </div>\r\n  <div *ngIf=\"isLogged\" class=\"sign-container\">\r\n    <button class=\"sign\" (click)=\"signOut()\" title=\"Sign out\"></button>\r\n  </div>\r\n</div>\r\n","import { ProjectModel } from './../../../classes/project.model';\r\nimport { ProjectService } from './../../../services/project.service';\r\nimport { TaskModel } from './../../../classes/task.model';\r\nimport { TaskManagerService } from './../../../services/task-manager.service';\r\nimport { BoardTaskModel } from './../../../classes/boardTask.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.scss'],\r\n})\r\n\r\n// Класс личный кабинет.\r\nexport class PersonalComponent implements OnInit {\r\n  constructor(\r\n    private taskManagerService: TaskManagerService,\r\n    private formBuilder: FormBuilder,\r\n    private projectService: ProjectService\r\n  ) {}\r\n\r\n  // Логин текущего пользователя.\r\n  userName: string;\r\n  // Форма отправки проекта.\r\n  projectFormGroup: FormGroup;\r\n  // Проект для создания проекта.\r\n  project: ProjectModel;\r\n  // Массив проектов пользователя.\r\n  projects: ProjectModel[] = [];\r\n  // Массив назначенных задач.\r\n  assignedTasks: BoardTaskModel[] = [];\r\n  // Массив задач пользователя.\r\n  userTasks: BoardTaskModel[] = [];\r\n  // Задача пользователя для детализации.\r\n  task: TaskModel;\r\n  // Флаг - показать форму задачи.\r\n  showTaskForm: boolean;\r\n  // Флаг - показать детализацию задачи.\r\n  showTaskDetail: boolean;\r\n  // Флаг - показать ввод проекта.\r\n  showInput: boolean;\r\n  // Флаг показать свои задачи / назначенные задачи.\r\n  myTasks: boolean;\r\n  // Текст заголовка с задачами пользователя.\r\n  taskComponentHeader: string;\r\n  // Текст всплывающей подсказки toggle.\r\n  toggleTitleText: string;\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.toggleTitleText = 'To my tasks';\r\n    this.taskComponentHeader = 'Tasks assigned to me';\r\n    this.initForm();\r\n\r\n    this.showTaskForm = false;\r\n    this.showTaskDetail = false;\r\n    this.showInput = false;\r\n\r\n    this.project = new ProjectModel();\r\n\r\n    // Извлечение логина.\r\n    this.userName = localStorage.getItem('username');\r\n    this.getProjects();\r\n  }\r\n\r\n  // Инициализация формы.\r\n  initForm() {\r\n    this.projectFormGroup = this.formBuilder.group({\r\n      title: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('[a-zA-Zа-яА-Я0-9_]+'),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(40),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Метод получает задачу по id.\r\n  getTaskById(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        // вывести задачу.\r\n        this.showTaskDetail = true;\r\n        this.task = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Запрос на получение всех проектов пользователя.\r\n  getProjects() {\r\n    this.projectService.getAccountProjects(this.userName).subscribe(\r\n      (data: ProjectModel[]) => {\r\n        if (data) {\r\n          this.projects = data;\r\n          this.getAssignedTasks();\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log('error');\r\n      }\r\n    );\r\n  }\r\n\r\n  // Запрос на получение всех задач пользователя.\r\n  getTasks() {\r\n    this.taskManagerService\r\n      .getUserTasks(this.userName)\r\n      .subscribe((data: BoardTaskModel[]) => {\r\n        if (data) {\r\n          this.userTasks = data;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Получение назначенных пользователю задач.\r\n  getAssignedTasks() {\r\n    this.taskManagerService\r\n      .GetAssignedTasks(this.userName)\r\n      .subscribe((data: BoardTaskModel[]) => {\r\n        if (data) {\r\n          this.assignedTasks = data;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Изменение задачи.\r\n  updateTask(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        this.task = data;\r\n        this.showTaskForm = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Созание задачи.\r\n  createTask() {\r\n    this.task = new TaskModel();\r\n    this.showTaskForm = true;\r\n  }\r\n\r\n  // Закрытие формы задачи.\r\n  closeTaskForm() {\r\n    this.showTaskForm = false;\r\n  }\r\n\r\n  // Обновление задач после отправки формы задач.\r\n  sendTask() {\r\n    this.closeTaskForm();\r\n    if (this.myTasks) {\r\n      this.getTasks();\r\n    }\r\n    else {\r\n      this.getAssignedTasks();\r\n    }\r\n  }\r\n\r\n  // Удаление задачи.\r\n  deleteTask(taskId: number) {\r\n    console.log(taskId);\r\n    this.taskManagerService\r\n    .deleteTask(taskId)\r\n    .subscribe(() => {\r\n      if (this.myTasks) {\r\n        this.getTasks();\r\n      }\r\n      else {\r\n        this.getAssignedTasks();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Удаление проекта.\r\n  deleteProject(projectId: number) {\r\n    this.projectService.deleteProject(projectId).subscribe((data:boolean) => {\r\n      if (data) {\r\n        this.getProjects();\r\n      }\r\n    },\r\n    (error) => {\r\n      console.log(\"Delete project error\");\r\n    }\r\n    )\r\n  }\r\n\r\n  // Закрытие детализации задачи.\r\n  closeTaskDetail() {\r\n    this.showTaskDetail = false;\r\n  }\r\n\r\n  showTaskByHashTag(tasks: BoardTaskModel[]) {\r\n    this.closeTaskDetail();\r\n  }\r\n\r\n  // Создание проекта.\r\n  createProject() {\r\n    this.showInput = !this.showInput;\r\n  }\r\n\r\n  // Проверка состояния переключателя.\r\n  check(checked: boolean) {\r\n    this.myTasks = checked;\r\n    this.taskComponentHeader = this.myTasks\r\n      ? 'My tasks'\r\n      : 'Tasks assigned to me';\r\n\r\n    this.toggleTitleText = this.myTasks ? 'To assigned tasks' : 'To my tasks';\r\n    if (this.myTasks) {\r\n      this.getTasks();\r\n    }\r\n    else {\r\n      this.getAssignedTasks();\r\n    }\r\n  }\r\n\r\n  // Отправка формы проекта.\r\n  onSubmit() {\r\n    this.showInput = false;\r\n    const title = this.projectFormGroup.controls.title;\r\n\r\n    this.project.AuthorId = this.userName;\r\n    this.project.Title = title.value;\r\n    title.setValue('');\r\n\r\n    this.projectService.addProject(this.project).subscribe((data) => {\r\n      if (data) {\r\n        this.getProjects();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"personal-container\">\r\n  <!-- Окно задачи с подробной информацией -->\r\n  <app-task\r\n    *ngIf=\"showTaskDetail\"\r\n    class=\"task-detail\"\r\n    (close)=\"closeTaskDetail()\"\r\n    (tasksByHashTag)=\"showTaskByHashTag($event)\"\r\n    [task]=\"task\"\r\n  ></app-task>\r\n\r\n  <!-- Окно задачи для создания/изменения задачи -->\r\n  <app-task-form\r\n    *ngIf=\"showTaskForm\"\r\n    class=\"task-form\"\r\n    (close)=\"closeTaskForm()\"\r\n    (send)=\"sendTask()\"\r\n    [changeTask]=\"task\"\r\n  ></app-task-form>\r\n\r\n  <div class=\"personal-task\">\r\n    <div class=\"title\">\r\n      <h3 class=\"title-text\">{{ taskComponentHeader }}</h3>\r\n    </div>\r\n    <app-toggle class=\"toggle\" (checked)=\"check($event)\" [title]=\"toggleTitleText\" ></app-toggle>\r\n    <div class=\"task-control-container\">\r\n      <button class=\"button\" (click)=\"createTask()\">Create task</button>\r\n    </div>\r\n\r\n    <!-- Задачи пользователя, в которых он является автором -->\r\n    <div *ngIf=\"myTasks\" class=\"task-container\">\r\n      <app-user-task\r\n        *ngFor=\"let task of userTasks\"\r\n        (taskIdEmitter)=\"getTaskById($event)\"\r\n        (delete)=\"deleteTask($event)\"\r\n        (updateTaskEmitter)=\"updateTask($event)\"\r\n        [task]=\"task\"\r\n      ></app-user-task>\r\n    </div>\r\n\r\n    <!-- Задачи пользователя, в которых он является исполнителем -->\r\n    <app-tasks-executor\r\n      *ngIf=\"!myTasks\"\r\n      [tasks]=\"assignedTasks\"\r\n      (taskIdEmitter)=\"getTaskById($event)\"\r\n      (delete)=\"deleteTask($event)\"\r\n      (updateTaskEmitter)=\"updateTask($event)\"\r\n    >\r\n    </app-tasks-executor>\r\n  </div>\r\n\r\n  <!-- Проекты пользователя -->\r\n  <div class=\"personal-project\">\r\n    <div class=\"title\">\r\n      <h3 class=\"title-text\">My projects</h3>\r\n    </div>\r\n    <div class=\"task-control-container\">\r\n      <button class=\"button\" (click)=\"createProject()\">\r\n        Create project\r\n      </button>\r\n      <form\r\n        [formGroup]=\"projectFormGroup\"\r\n        [ngClass]=\"{ show: showInput }\"\r\n        class=\"project-input-container\"\r\n        (submit)=\"onSubmit()\"\r\n      >\r\n        <input\r\n          formControlName=\"title\"\r\n          class=\"project-input\"\r\n          placeholder=\"Please enter project name\"\r\n        />\r\n      </form>\r\n    </div>\r\n    <div class=\"personal-project-container\">\r\n      <app-user-project\r\n        *ngFor=\"let project of projects\"\r\n        [project]=\"project\"\r\n        (delete)=\"deleteProject($event)\"\r\n      ></app-user-project>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { BoardTaskModel } from './../../../../classes/boardTask.model';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tasks-executor',\r\n  templateUrl: './tasks-executor.component.html',\r\n  styleUrls: ['./tasks-executor.component.scss']\r\n})\r\n\r\n// Компонент для вывода задач, в которых пользователь является исполнителем.\r\nexport class TasksExecutorComponent implements OnInit {\r\n\r\n  // Входное свойство - задачи, назначенные пользователю.\r\n  @Input() tasks: BoardTaskModel[] = [];\r\n  // Выходное свойство, идентификатор задачи.\r\n  @Output() taskIdEmitter = new EventEmitter();\r\n  // Выходное свойство, изменение задачи.\r\n  @Output() updateTaskEmitter = new EventEmitter();\r\n  // Удаление задачи.\r\n  @Output() delete = new EventEmitter<number>();\r\n\r\n  // Логин пользователя.\r\n  userName: string;\r\n\r\n  constructor() { }\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // Передача id задачи на выход свойства для получения задачи.\r\n  getTaskById(taskId: number) {\r\n    this.taskIdEmitter.emit(taskId);\r\n  }\r\n\r\n  // Передача id задачи на выход свойства для изменения задачи.\r\n  updateTask(taskId: number) {\r\n    this.updateTaskEmitter.emit(taskId);\r\n  }\r\n\r\n  // Удаление задачи.\r\n  deleteTask(taskId: number) {\r\n    this.delete.emit(taskId);\r\n  }\r\n}\r\n","<div class=\"assigned-tasks\">\r\n  <div class=\"tasks-container\">\r\n    <app-user-task\r\n      *ngFor=\"let task of tasks\"\r\n      (taskIdEmitter)=\"getTaskById($event)\"\r\n      (updateTaskEmitter)=\"updateTask($event)\"\r\n      (delete)=\"deleteTask($event)\"\r\n      [task]=\"task\"\r\n    ></app-user-task>\r\n  </div>\r\n</div>\r\n","import { SharedEventService } from './../../../../services/shared-event.service';\r\nimport { AccountModel } from './../../../../classes/account.model';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss'],\r\n})\r\n\r\n// Компонент авторизации.\r\nexport class SignInComponent implements OnInit {\r\n  // Выходное свойство, событие авторизации.\r\n  @Output() loginEmitter: EventEmitter<boolean> = new EventEmitter();\r\n  // Флаг - авторизация не успешна.\r\n  isLoginError: boolean = false;\r\n  // Аккаунт.\r\n  accountModel: AccountModel = new AccountModel();\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private sharedEventService: SharedEventService\r\n  ) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {}\r\n\r\n  // Отправка формы авторизации.\r\n  onSubmit() {\r\n    this.userService.userAuthentication(this.accountModel).subscribe(\r\n      (data: any) => {\r\n        localStorage.setItem('token', data.access_token);\r\n        localStorage.setItem('username', this.accountModel.UserName);\r\n        this.router.navigate(['/main']);\r\n\r\n        // Отправка события в общий сервис событий.\r\n        this.sharedEventService.emitSignIn(true);\r\n        this.sharedEventService.getUserName(this.accountModel.UserName);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div *ngIf=\"isLoginError\" class=\"red-text center error-message\">\r\n  Incorrect Email or Password\r\n</div>\r\n\r\n<form #loginForm=\"ngForm\" class=\"col s12 white\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"Login\"\r\n        [(ngModel)]=\"accountModel.UserName\"\r\n        minlength=\"2\"\r\n        required\r\n      />\r\n      <label data-error=\"Invalid email\">Login</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input\r\n        type=\"password\"\r\n        name=\"Password\"\r\n        [(ngModel)]=\"accountModel.Password\"\r\n        minlength=\"4\"\r\n        required\r\n      />\r\n      <label data-error=\"Invalid password\">Password</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <button\r\n        [disabled]=\"!loginForm.valid\"\r\n        class=\"btn-large btn-submit\"\r\n        type=\"submit\"\r\n      >\r\n        Login\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AccountModel } from 'src/app/classes/account.model';\r\nimport { UserModel } from '../../../../classes/user.model';\r\nimport { UserService } from '../../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss'],\r\n})\r\n\r\n// Компонент регистрации пользователя.\r\nexport class SignUpComponent implements OnInit {\r\n  // Пользователь.\r\n  user: UserModel = new UserModel();\r\n  // Аккаунт\r\n  account: AccountModel = new AccountModel();\r\n  // Название кнопки регистрации.\r\n  buttonName: string;\r\n  // Подтверждение пароля.\r\n  confirmPassword: string;\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n    this.buttonName = 'Sign ';\r\n  }\r\n\r\n  // Проверяет на пустые поля и соответствие пароля и его подтверждения.\r\n  checkFields(): boolean {\r\n    if (\r\n      this.account.UserName !== '' &&\r\n      this.account.Password !== '' &&\r\n      this.confirmPassword !== '' &&\r\n      // this.user.FirstName !== '' &&\r\n      // this.user.LastName !== '' &&\r\n      this.account.Password === this.confirmPassword\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // Очищает форму.\r\n  resetForm(): void {\r\n    this.account.UserName = '';\r\n    this.account.Password = '';\r\n    this.user.FirstName = '';\r\n    this.user.LastName = '';\r\n    this.confirmPassword = '';\r\n  }\r\n\r\n  // Отправка формы регистрации.\r\n  onSubmit(): void {\r\n    if (this.checkFields()) {\r\n      this.buttonName = 'Sending Data';\r\n      this.userService.registerUser(this.account).subscribe(\r\n        (data) => {\r\n          // добавить сообщение об успешной регистрации\r\n          this.resetForm();\r\n          alert(\"Registration success!\");\r\n        },\r\n        // вывести нормальное сообщение об ошибке\r\n        (error) => {\r\n          this.buttonName = 'Error';\r\n        }\r\n      );\r\n    } else {\r\n      this.buttonName = 'Error';\r\n    }\r\n  }\r\n}\r\n","<form class=\"col s12 white\">\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input\r\n        class=\"validate\"\r\n        type=\"text\"\r\n        name=\"Login\"\r\n        [(ngModel)]=\"account.UserName\"\r\n        minlength=\"3\"\r\n        required\r\n      />\r\n      <label>Login</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s6\">\r\n      <input\r\n        class=\"validate\"\r\n        type=\"password\"\r\n        name=\"Password\"\r\n        minlength=\"4\"\r\n        [(ngModel)]=\"account.Password\"\r\n        required\r\n      />\r\n      <label>Password</label>\r\n      <span *ngIf=\"account.Password.length < 4\" class=\"wrong\"\r\n        >требуется 4 символа и болеее</span\r\n      >\r\n    </div>\r\n\r\n    <div class=\"input-field col s6\">\r\n      <input\r\n        class=\"validate\"\r\n        type=\"password\"\r\n        name=\"confirmPassword\"\r\n        [(ngModel)]=\"confirmPassword\"\r\n        required\r\n        minlength=\"4\"\r\n      />\r\n      <label>Confirm password</label>\r\n      <span *ngIf=\"account.Password !== confirmPassword\" class=\"wrong\"\r\n        >Не совпадает с паролем</span\r\n      >\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div class=\"row\">\r\n    <div class=\"input-field col s6\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"FirstName\"\r\n        [(ngModel)]=\"user.FirstName\"\r\n        required\r\n      />\r\n      <label>First Name</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col s6\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"LastName\"\r\n        [(ngModel)]=\"user.LastName\"\r\n        required\r\n      />\r\n      <label>Last Name</label>\r\n    </div>\r\n  </div> -->\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <button\r\n        [disabled]=\"!checkFields()\"\r\n        class=\"btn-large btn-submit\"\r\n        type=\"submit\"\r\n        (click)=\"onSubmit()\"\r\n      >\r\n        {{ buttonName }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { SharedEventService } from './../../../services/shared-event.service';\r\nimport { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss'],\r\n})\r\n\r\n// Компонент контейнер регистрации и авторизации пользователя.\r\nexport class UserComponent implements OnInit {\r\n  // Выходное свойство - авторизация.\r\n  @Output() signInEmitter: EventEmitter<boolean> = new EventEmitter();\r\n  // Выходное свойство - регистрация.\r\n  @Output() signUpEmitter: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {}\r\n\r\n  // Авторизация.\r\n  SignIn(logged: boolean) {\r\n    console.log('user');\r\n  }\r\n\r\n  // Регистрация.\r\n  emitSignUp(event: boolean) {\r\n    this.signUpEmitter.emit(event);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col s8 offset-s2\">\r\n      <div class=\"card grey lighten-2\">\r\n        <div class=\"card-tabs\">\r\n          <ul class=\"tabs tabs-fixed-width tabs-transparent\">\r\n            <li class=\"tab\">\r\n              <a routerLink=\"/sign-in\" routerLinkActive=\"active\">Sign In</a>\r\n            </li>\r\n            <li class=\"tab\">\r\n              <a routerLink=\"/sign-up\" routerLinkActive=\"active\">Sign Up</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"card-content white\">\r\n          <div class=\"row\">\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BoardTaskModel } from 'src/app/classes/boardTask.model';\r\n\r\n@Component({\r\n  selector: 'app-board-task',\r\n  templateUrl: './boardTask.component.html',\r\n  styleUrls: ['./boardTask.component.scss'],\r\n})\r\n\r\n// Компонент - задача для вывода на доску.\r\nexport class BoardTaskComponent implements OnInit {\r\n  // Входное свойство для полей компонента.\r\n  @Input() boardTask: BoardTaskModel;\r\n\r\n  // Выходное свойство - идентификатор задачи.\r\n  @Output() taskIdEmitter = new EventEmitter();\r\n  // Приоритет задачи.\r\n  priorityClass: string;\r\n  // Автор задачи.\r\n  author: string;\r\n\r\n  constructor() {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    if (this.boardTask) {\r\n      const priority = this.boardTask.Priority.toLowerCase();\r\n      this.priorityClass = `task-${priority}`;\r\n      this.author = this.boardTask.AuthorLogin.substr(0, 2);\r\n    }\r\n  }\r\n\r\n  // Метод вызывается по клику на задаче. Отдает в общий сервис id задачи.\r\n  boardTaskOnClick() {\r\n    this.taskIdEmitter.emit(this.boardTask.TaskId);\r\n  }\r\n}\r\n","<div [class]=\"priorityClass\" class=\"task\" (click)=\"boardTaskOnClick()\">\r\n  <div class=\"task__title\">\r\n    <p>{{ boardTask.Title }}</p>\r\n  </div>\r\n  <div class=\"task__description\">\r\n    <p>{{ boardTask.Description }}</p>\r\n  </div>\r\n  <div class=\"task__footer\">\r\n    <div class=\"task__footer__status\">\r\n      <p>{{ boardTask.Status }}</p>\r\n    </div>\r\n    <div class=\"task__footer__deadlineDate\">\r\n      <p>{{ boardTask.DeadlineDate | date: \"mediumDate\" }}</p>\r\n    </div>\r\n    <div class=\"task__footer__author\">\r\n      <p>{{ author }}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Status } from './../../../enums/status.enums';\r\nimport { HashTagService } from './../../../services/hash-tag.service';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { UserModel } from './../../../classes/user.model';\r\nimport { ProjectModel } from './../../../classes/project.model';\r\nimport { ProjectService } from './../../../services/project.service';\r\nimport { UserService } from './../../../services/user.service';\r\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { TaskModel } from './../../../classes/task.model';\r\nimport { Priority } from './../../../enums/priority.enum';\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.scss'],\r\n})\r\n\r\n// Компонент - форма для ввода параметров задачи.\r\nexport class TaskFormComponent implements OnInit {\r\n  // Свойство - id задачи родителя в случае добавления подзадачи.\r\n  @Input() parenTaskId: string;\r\n  // Свойство - задача на изменение.\r\n  @Input() changeTask: TaskModel;\r\n\r\n  // Выходное свойство - закрытие окна.\r\n  @Output() close = new EventEmitter();\r\n  // Выходное свойство - отправка задачи.\r\n  @Output() send = new EventEmitter();\r\n\r\n  // Форма задачи.\r\n  taskFormGroup: FormGroup;\r\n  // Поле для выпадающего списка Priority.\r\n  priority = Priority;\r\n  // Поле для выпадающего списка Status.\r\n  status = Status;\r\n  // Поле для заполнения данными при создании задачи.\r\n  task: TaskModel = new TaskModel();\r\n  // Массив проектов.\r\n  projects: ProjectModel[];\r\n  // Выбранный проект.\r\n  project: ProjectModel = new ProjectModel();\r\n  // Массив логинов пользователей.\r\n  users: string[];\r\n  // Текущий приоритет задачи.\r\n  priorityText: string;\r\n  // Текущий статус задачи.\r\n  statusText: string;\r\n  // Флаг - показать проекты.\r\n  hideProjectMenu: boolean;\r\n  // Флаг - показать пользователей.\r\n  hideUserMenu: boolean;\r\n  // Флаг - показать меню статуса.\r\n  statusFlag: boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private taskManager: TaskManagerService,\r\n    private userService: UserService,\r\n    private projectService: ProjectService,\r\n    private hashTagService: HashTagService\r\n  ) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.hideProjectMenu = true;\r\n    this.hideUserMenu = true;\r\n    this.priorityText = this.task.Priority;\r\n    this.statusText = this.task.Status;\r\n    this.statusFlag = this.changeTask?.TaskId ? true : false;\r\n    this.initForm();\r\n  }\r\n\r\n  // Инициализация формы.\r\n  initForm() {\r\n    this.taskFormGroup = this.formBuilder.group({\r\n      title: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('[a-zA-Zа-яА-Я0-9 ]+'),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20),\r\n        ],\r\n      ],\r\n      description: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(200),\r\n        ],\r\n      ],\r\n      executor: ['', []],\r\n      project: ['', []],\r\n      deadlineDate: ['', [Validators.required]],\r\n      priority: ['', []],\r\n      status: ['', []],\r\n    });\r\n\r\n    const controls = this.taskFormGroup.controls;\r\n\r\n    if (this.changeTask.TaskId) {\r\n      this.priorityText = this.changeTask.Priority;\r\n      controls.title.setValue(this.changeTask.Title);\r\n      controls.description.setValue(this.changeTask.Description);\r\n      controls.executor.setValue(this.changeTask.ExecutorLogin);\r\n      controls.priority.setValue(this.changeTask.Priority);\r\n      controls.deadlineDate.setValue(this.changeTask.DeadlineDate);\r\n    }\r\n  }\r\n\r\n  // Отправка задачи на сервер.\r\n  onSubmit() {\r\n    const controls = this.taskFormGroup.controls;\r\n    const valid = this.isValid();\r\n\r\n    if (!valid) {\r\n      return;\r\n    }\r\n\r\n    this.task.TaskId = this.changeTask.TaskId;\r\n    this.task.AuthorLogin = localStorage.getItem('username');\r\n    this.task.Title = controls.title.value;\r\n    this.task.Description = controls.description.value;\r\n    this.task.DeadlineDate = controls.deadlineDate.value;\r\n    this.task.ExecutorLogin = controls.executor.value || this.task.AuthorLogin;\r\n    this.task.Priority = this.priorityText;\r\n    this.task.ProjectId = this.project.ProjectId;\r\n    this.task.Status = this.changeTask?.TaskId\r\n      ? this.statusText\r\n      : this.task.Status;\r\n\r\n    // Получение массива хэш-тегов из текста описания задачи.\r\n    this.task.HashTags = this.hashTagService.parseHashTags(\r\n      this.task.Description\r\n    );\r\n\r\n    if (this.changeTask.TaskId) {\r\n      this.taskManager.changeTask(this.task).subscribe(() => {\r\n        console.log('change task');\r\n        // Выдача на выход события отправки.\r\n        this.send.emit();\r\n      });\r\n    } else {\r\n      this.taskManager.addTask(this.task).subscribe(() => {\r\n        console.log('add task');\r\n        // Выдача на выход события отправки.\r\n        this.send.emit();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Проверка заполнения формы.\r\n  isValid(): boolean {\r\n    const controls = this.taskFormGroup.controls;\r\n    return controls.title.valid && controls.description.valid;\r\n  }\r\n\r\n  // Выбор приоритета задачи в выпадающем списке.\r\n  pickPriority(p: string) {\r\n    this.priorityText = p;\r\n  }\r\n\r\n  // Выбор статуса задачи в выпадающем списке.\r\n  pickStatus(s: string) {\r\n    this.statusText = s;\r\n  }\r\n\r\n  // Получение списка пользователей.\r\n  getUsers() {\r\n    this.hideUserMenu = false;\r\n    this.userService.getUsers().subscribe((data: []) => {\r\n      if (data) {\r\n        this.users = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Выбор пользователя.\r\n  setUser(user: string) {\r\n    const userInput = this.taskFormGroup.controls.executor;\r\n    userInput.setValue(user);\r\n\r\n    this.hideUserMenu = true;\r\n  }\r\n\r\n  // Получение всех проектов\r\n  getProjects() {\r\n    this.hideProjectMenu = false;\r\n    // Получение проектов если они еще не получены.\r\n    if (!this.projects) {\r\n      this.projectService.getAllProjects().subscribe(\r\n        (data: ProjectModel[]) => {\r\n          if (data) {\r\n            this.projects = data;\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log('error get all projects');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // Выбор проекта.\r\n  setProject(project: ProjectModel) {\r\n    const projectInput = this.taskFormGroup.controls.project;\r\n    projectInput.setValue(project.Title);\r\n\r\n    this.project = project;\r\n    this.hideProjectMenu = true;\r\n  }\r\n\r\n  // Выбор none в графе проект.\r\n  setNoneProject() {\r\n    this.hideProjectMenu = true;\r\n    this.taskFormGroup.controls.project.setValue(null);\r\n  }\r\n\r\n  // Закрытие окна.\r\n  closeForm() {\r\n    this.close.emit();\r\n  }\r\n}\r\n","<div class=\"task-form-wrapper\">\r\n  <form\r\n    class=\"task-form\"\r\n    [formGroup]=\"taskFormGroup\"\r\n    (submit)=\"onSubmit()\"\r\n    action=\"#\"\r\n    method=\"POST\"\r\n  >\r\n    <input\r\n      class=\"task-form-input\"\r\n      formControlName=\"title\"\r\n      placeholder=\"Title\"\r\n    />\r\n    <textarea\r\n      class=\"task-form-input description\"\r\n      formControlName=\"description\"\r\n      placeholder=\"Description\"\r\n    ></textarea>\r\n    <input\r\n      class=\"task-form-input drop-input\"\r\n      formControlName=\"executor\"\r\n      (click)=\"getUsers()\"\r\n      placeholder=\"Executor\"\r\n      readonly\r\n    />\r\n    <ul [ngClass]=\"{ hide: hideUserMenu }\" class=\"drop-down-list user-list\">\r\n      <li *ngFor=\"let u of users\" class=\"drop-menu\" (click)=\"setUser(u)\">\r\n        {{ u }}\r\n      </li>\r\n    </ul>\r\n    <input\r\n      class=\"task-form-input drop-input\"\r\n      formControlName=\"project\"\r\n      (click)=\"getProjects()\"\r\n      placeholder=\"Project\"\r\n      readonly\r\n    />\r\n    <ul\r\n      [ngClass]=\"{ hide: hideProjectMenu }\"\r\n      class=\"drop-down-list project-list\"\r\n    >\r\n      <li class=\"drop-menu\" (click)=\"setNoneProject()\">None</li>\r\n      <li *ngFor=\"let p of projects\" class=\"drop-menu\" (click)=\"setProject(p)\">\r\n        {{ p.Title }}\r\n      </li>\r\n    </ul>\r\n    <div class=\"priority-status-container\">\r\n      <mat-form-field class=\"datepicker-field\" appearance=\"fill\">\r\n        <mat-label class=\"datepicker-label\">Deadline date</mat-label>\r\n        <input\r\n          class=\"datepicker-input\"\r\n          matInput\r\n          [matDatepicker]=\"picker\"\r\n          formControlName=\"deadlineDate\"\r\n          readonly\r\n        />\r\n        <mat-datepicker-toggle\r\n          class=\"datepicker-toggle\"\r\n          matSuffix\r\n          [for]=\"picker\"\r\n        ></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n      <input class=\"hide\" formControlName=\"priority\" />\r\n      <ul class=\"task-form-list\">\r\n        {{\r\n          priorityText\r\n        }}\r\n        <li\r\n          *ngFor=\"let p of priority | enumToArray\"\r\n          class=\"list-option\"\r\n          (click)=\"pickPriority(p)\"\r\n        >\r\n          {{ p }}\r\n        </li>\r\n      </ul>\r\n      <input class=\"hide\" formControlName=\"status\" />\r\n      <ul *ngIf=\"statusFlag\" class=\"task-form-list\">\r\n        {{\r\n          statusText\r\n        }}\r\n        <li\r\n          *ngFor=\"let s of status | enumToArray\"\r\n          class=\"list-option\"\r\n          (click)=\"pickStatus(s)\"\r\n        >\r\n          {{ s }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <input class=\"button\" type=\"submit\" value=\"Submit\" />\r\n      <button class=\"button\" (click)=\"closeForm()\" type=\"button\">Cancel</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { ProjectModel } from './../../../classes/project.model';\r\nimport { ProjectService } from './../../../services/project.service';\r\nimport { BoardTaskModel } from './../../../classes/boardTask.model';\r\nimport { HashTagService } from './../../../services/hash-tag.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CommentModel } from './../../../classes/comment.model';\r\nimport { CommentService } from './../../../services/comment.service';\r\nimport { TaskModel } from '../../../classes/task.model';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.scss'],\r\n})\r\n\r\n// Компонент окно с детализацией задачи.\r\nexport class TaskComponent implements OnInit {\r\n  // Входное свойство Задача.\r\n  @Input() task: TaskModel;\r\n  // Выходное свойство, событие закрыть окно.\r\n  @Output() close = new EventEmitter();\r\n  // Выходное свойство, массив задач.\r\n  @Output() tasksByHashTag = new EventEmitter<BoardTaskModel[]>();\r\n\r\n  // Название проекта.\r\n  project: string;\r\n  // Комментарии.\r\n  comments: CommentModel[];\r\n  // Флаг - показать комментарии.\r\n  showComments: boolean;\r\n  // Текст кнопки показать/скрыть комментарий.\r\n  commentButtonText: string = 'Show comments';\r\n  // Форма добавления комментария.\r\n  newCommmentForm: FormGroup;\r\n  // Флаг показать форму ввода нового коммента.\r\n  showCommentForm: boolean;\r\n\r\n  constructor(\r\n    private projectService: ProjectService,\r\n    private commentService: CommentService,\r\n    private hashTagService: HashTagService,\r\n    private formBuilder: FormBuilder\r\n  ) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.showCommentForm = false;\r\n    this.showComments = false;\r\n    this.project = this.task.ProjectId ? ` : ${this.task.ProjectId}` : '';\r\n    this.commentFormInit();\r\n\r\n    this.getProject();\r\n  }\r\n\r\n  // Получение проекта.\r\n  getProject() {\r\n    this.projectService\r\n      .getProject(this.task.ProjectId)\r\n      .subscribe((data: ProjectModel) => {\r\n        if (data) {\r\n          this.project = `:${data.Title}`;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Инициализация формы добавления комментария.\r\n  commentFormInit() {\r\n    this.newCommmentForm = this.formBuilder.group({\r\n      content: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(6),\r\n          Validators.maxLength(400),\r\n        ],\r\n      ],\r\n    });\r\n  }\r\n\r\n  // Отправка нового комментария.\r\n  submitNewComment() {\r\n    const content = this.newCommmentForm.controls.content;\r\n    if (content.valid) {\r\n      const username = localStorage.getItem('username');\r\n\r\n      const commentModel = new CommentModel();\r\n      commentModel.TaskId = this.task.TaskId;\r\n      commentModel.Login = username;\r\n      commentModel.Content = content.value;\r\n\r\n      this.commentService.addComment(commentModel).subscribe(() => {\r\n        this.showCommentForm = false;\r\n        this.getComments();\r\n      });\r\n    }\r\n  }\r\n\r\n  // Нажатие на кнопку показать/скрыть комментарии.\r\n  onClick() {\r\n    if (!this.showComments) {\r\n      this.getComments();\r\n    }\r\n\r\n    this.showComments = !this.showComments;\r\n    this.commentButtonText = this.showComments\r\n      ? 'Hide comments'\r\n      : 'Show comments';\r\n  }\r\n\r\n  // Метод получает комментарии задачи.\r\n  getComments() {\r\n    this.commentService\r\n      .getTaskComments(this.task.TaskId)\r\n      .subscribe((data: CommentModel[]) => {\r\n        if (data) {\r\n          this.comments = data;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Метод отсылает хэш-тег и получает массив задач.\r\n  sendHashTag(event: any) {\r\n    this.hashTagService\r\n      .getTasks(event.target.innerText)\r\n      .subscribe((data: BoardTaskModel[]) => {\r\n        if (data) {\r\n          this.tasksByHashTag.emit(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  // Метод закрывает окно детализации задачи.\r\n  closeTaskDetail() {\r\n    this.close.emit();\r\n  }\r\n\r\n  // Обработчик нажатия на кнопку New comment.\r\n  newCommentClick() {\r\n    if (!this.showCommentForm) {\r\n      // Инициализация поля ввода комментария.\r\n      this.newCommmentForm.controls.content.setValue('');\r\n    }\r\n\r\n    // Показ/сокрытие формы ввода комментария.\r\n    this.showCommentForm = !this.showCommentForm;\r\n  }\r\n}\r\n","<div class=\"task-wrapper\">\r\n  <div class=\"task-container\">\r\n    <div class=\"task-title\">\r\n      <p class=\"task-title__text\">{{ task.Title }}{{ project }}</p>\r\n      <div class=\"close\" (click)=\"closeTaskDetail()\"></div>\r\n    </div>\r\n    <div class=\"task-description\">\r\n      <p class=\"task-description__text\">{{ task.Description }}</p>\r\n      <a\r\n        class=\"task-hash-tags__tags\"\r\n        *ngFor=\"let hashTag of task.HashTags\"\r\n        (click)=\"sendHashTag($event)\"\r\n        >{{ hashTag }}</a\r\n      >\r\n    </div>\r\n    <div class=\"task-author-executor\">\r\n      <p class=\"task-author name\">\r\n        <span class=\"span\">Author:</span> {{ task.AuthorLogin }}\r\n      </p>\r\n      <p class=\"task-executor name\">\r\n        <span class=\"span\">Executor:</span> {{ task.ExecutorLogin }}\r\n      </p>\r\n    </div>\r\n    <div class=\"task-status\">\r\n      <p class=\"task-status__text\">\r\n        <span class=\"span\">Status:</span> {{ task.Status }}\r\n      </p>\r\n    </div>\r\n    <div class=\"task-priority\">\r\n      <p class=\"task-priority__text\">\r\n        <span class=\"span\">Priority:</span> {{ task.Priority }}\r\n      </p>\r\n    </div>\r\n    <div class=\"task-date\">\r\n      <p class=\"task-create date\">\r\n        <span class=\"span\">Creation date:</span>\r\n        {{ task.CreateDate | date: \"mediumDate\" }}\r\n      </p>\r\n      <p class=\"task-deadline date\">\r\n        <span class=\"span\">Finish before:</span>\r\n        {{ task.DeadlineDate | date: \"mediumDate\" }}\r\n      </p>\r\n    </div>\r\n    <button class=\"button\" (click)=\"onClick()\">\r\n      {{ commentButtonText }}\r\n    </button>\r\n  </div>\r\n  <div *ngIf=\"showComments\" class=\"comment-container\">\r\n    <form\r\n      [ngClass]=\"{ showform: showCommentForm }\"\r\n      class=\"new-comment-form\"\r\n      [formGroup]=\"newCommmentForm\"\r\n    >\r\n      <div class=\"new-comment-control\">\r\n        <a\r\n          class=\"new-comment-button\"\r\n          type=\"button\"\r\n          value=\"New comment\"\r\n          (click)=\"newCommentClick()\"\r\n          >New comment</a\r\n        >\r\n        <a\r\n          *ngIf=\"showCommentForm\"\r\n          class=\"icon save\"\r\n          (click)=\"submitNewComment()\"\r\n          title=\"Save\"\r\n        ></a>\r\n      </div>\r\n      <textarea\r\n        [ngClass]=\"{ show: showCommentForm }\"\r\n        class=\"new-comment-textarea\"\r\n        formControlName=\"content\"\r\n      ></textarea>\r\n    </form>\r\n    <app-comment\r\n      *ngFor=\"let comment of comments\"\r\n      [comment]=\"comment\"\r\n      (updateComments)=\"getComments()\"\r\n    ></app-comment>\r\n  </div>\r\n</div>\r\n","import { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { BoardTaskModel } from './../../../classes/boardTask.model';\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-task',\r\n  templateUrl: './user-task.component.html',\r\n  styleUrls: ['./user-task.component.scss'],\r\n})\r\n\r\n// Компонент задача для вывода в кабинет пользователя.\r\nexport class UserTaskComponent implements OnInit {\r\n  // Входное свойство, задача.\r\n  @Input() task: BoardTaskModel = new BoardTaskModel();\r\n\r\n  // Выходное свойство, идентификатор задачи.\r\n  @Output() taskIdEmitter = new EventEmitter();\r\n  // Выходное свойство, изменение задачи.\r\n  @Output() updateTaskEmitter = new EventEmitter();\r\n  // Выходное свойство, удаление задачи.\r\n  @Output() delete = new EventEmitter<number>();\r\n\r\n  // Флаг является ли аккаунт автором задачи.\r\n  author: boolean;\r\n\r\n  constructor(private taskManagerService: TaskManagerService) {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    const userName = localStorage.getItem('username');\r\n    this.author = userName === this.task.AuthorLogin;\r\n  }\r\n\r\n  // Метод вызывается по клику на задаче. Отдает на выход id задачи.\r\n  onClickUserTask() {\r\n    this.taskIdEmitter.emit(this.task.TaskId);\r\n  }\r\n\r\n  // Удаление задачи.\r\n  deleteTask() {\r\n    this.delete.emit(this.task.TaskId);\r\n  }\r\n\r\n  // Изменение задачи. На выходное свойство подается id задачи.\r\n  updateTask() {\r\n    this.updateTaskEmitter.emit(this.task.TaskId);\r\n  }\r\n}\r\n","<div class=\"user-task\">\r\n  <div class=\"user-task-container\" (click)=\"onClickUserTask()\">\r\n    <div class=\"title container\">\r\n      <p class=\"text\">{{ task.Title }}</p>\r\n    </div>\r\n    <div class=\"description container\">\r\n      <p class=\"description__text text\">{{ task.Description }}</p>\r\n    </div>\r\n    <div class=\"status container\">\r\n      <p class=\"text\">{{ task.Status }}</p>\r\n    </div>\r\n    <div class=\"priority container\">\r\n      <p class=\"text\">{{ task.Priority }}</p>\r\n    </div>\r\n    <div class=\"deadline-date container\">\r\n      <p class=\"text\">{{ task.DeadlineDate | date: \"mediumDate\" }}</p>\r\n    </div>\r\n  </div>\r\n  <button *ngIf=\"author\" class=\"change button\" (click)=\"updateTask()\" title=\"Edit task\"></button>\r\n  <button *ngIf=\"author\" class=\"delete button\" (click)=\"deleteTask()\"title=\"Delete task\"></button>\r\n</div>\r\n","import { ProjectService } from './../../services/project.service';\r\nimport { ProjectModel } from './../../classes/project.model';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-project',\r\n  templateUrl: './user-project.component.html',\r\n  styleUrls: ['./user-project.component.scss']\r\n})\r\n\r\n// Компонент проект для вывода в кабинет пользователя.\r\nexport class UserProjectComponent implements OnInit {\r\n\r\n  // Входное свойство - данные проекта.\r\n  @Input() project: ProjectModel;\r\n  // Выходное свойство - удаление проекта.\r\n  @Output() delete: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(private projectService: ProjectService) { }\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    if (!this.project) {\r\n      this.project = new ProjectModel();\r\n    }\r\n  }\r\n\r\n  // Удаление проекта.\r\n  deleteProject() {\r\n    this.delete.emit(this.project.ProjectId);\r\n  }\r\n}\r\n","<div class=\"project-container\">\r\n  <p class=\"project project-title\">{{ project.Title }}</p>\r\n  <p class=\"project project-date\">{{ project.CreateDate | date: \"mediumDate\" }}</p>\r\n  <button class=\"button delete\" (click)=\"deleteProject()\" title=\"Delete project\"></button>\r\n</div>\r\n","// Перечисление - приоритет задачи.\r\nexport enum Priority {\r\n  Trivial = 'Trivial',\r\n  Minor = 'Minor',\r\n  Major = 'Major',\r\n  Critical = 'Critical',\r\n  Blocker = 'Blocker',\r\n}\r\n","// Перечисление - статус задачи.\r\nexport enum Status {\r\n  Await = 'Await',\r\n  InProgress = 'InProgress',\r\n  Canceled = 'Canceled',\r\n  Done = 'Done'\r\n}\r\n","import { CommentModel } from './../classes/comment.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommentService {\r\n  private rootUrl = 'https://localhost:44376';\r\n  httpOptions = {\r\n    headers: new HttpHeaders(),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Запрос на получение всех комментариев задачи.\r\n  getTaskComments(taskId: number) {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/comment/GetCommentsTask';\r\n    return this.http.get(\r\n      `${this.rootUrl}${route}?taskid=${taskId}`,\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  // Запрос на добавление комментария.\r\n  addComment(commentModel: CommentModel) {\r\n    const route = '/comment/AddComment';\r\n    const body = commentModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.post(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на удаление коммента.\r\n  deleteComment(commentId: number) {\r\n    const route = '/comment/DeleteComment';\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.delete(\r\n      `${this.rootUrl}${route}?commentId=${commentId}`,\r\n      this.httpOptions\r\n    );\r\n  }\r\n\r\n  // Запрос на удаление коммента.\r\n  updateComment(comment: CommentModel) {\r\n    const route = '/comment/ChangeComment';\r\n    const body = comment;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.put(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'enumToArray' })\r\n\r\n// Класс возвращает массив ключей объекта.\r\nexport class EnumToArrayPipe implements PipeTransform {\r\n    transform(data: Object) {\r\n        return Object.values(data);\r\n      }\r\n}","import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n// Сервис представляет функции работы с хэш-тегами.\r\nexport class HashTagService {\r\n  readonly rootUrl = 'https://localhost:44376';\r\n  httpOptions = {\r\n    headers: new HttpHeaders(),\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Функция ищет и возвращает массив тегов (слова, начинающиеся с #).\r\n  parseHashTags(text: string): string[] {\r\n    const regExp = /#[0-9a-zA-Zа-яА-Я]+\\b/gu;\r\n    let hashTags = text.match(regExp)?.map(s => s.slice(1));\r\n    return hashTags;\r\n  }\r\n\r\n  // Запрос на получение всех задач по хэш-тегу.\r\n  getTasks(hashTag: string): Observable<any> {\r\n    const route = '/HashTag/getTasks';\r\n    return this.http.get(`${this.rootUrl}${route}?hashTag=${hashTag}`);\r\n  }\r\n\r\n  // Функция отправляет post запрос на сервер для регистрации нового пользователя\r\n  addHashTags(hashTags: string[], taskId: number): Observable<any> {\r\n    const route = '/HashTag/AddHashTags';\r\n    const body = hashTags;\r\n    return this.http.post(`${this.rootUrl}${route}?taskId=${taskId}`, body);\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ProjectModel } from './../classes/project.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Сервис управления задачами\r\nexport class ProjectService {\r\n\r\n  private rootUrl = \"https://localhost:44376\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders()\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n    // Запрос на добавление проекта.\r\n    addProject(projectModel: ProjectModel): Observable<any> {\r\n      const route = '/project/addproject';\r\n      const body = projectModel;\r\n      this.httpOptions.headers = new HttpHeaders();\r\n      return this.http.post(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n    }\r\n\r\n    // Удаление проекта.\r\n    deleteProject(projectId: number): Observable<any> {\r\n      const route = '/project/deleteproject';\r\n      this.httpOptions.headers = new HttpHeaders();\r\n      return this.http.delete(`${this.rootUrl}${route}?projectid=${projectId}`, this.httpOptions);\r\n    }\r\n\r\n    // Запрос на получение всех проектов.\r\n    getAllProjects(): Observable<any> {\r\n      const route = '/project/getallprojects';\r\n      this.httpOptions.headers = new HttpHeaders();\r\n      return this.http.get(`${this.rootUrl}${route}`, this.httpOptions);\r\n    }\r\n\r\n    // Запрос на получение проектов пользователя.\r\n    getAccountProjects(userName: string): Observable<any> {\r\n      const route = '/project/getmyprojects';\r\n      this.httpOptions.headers = new HttpHeaders();\r\n      return this.http.get(`${this.rootUrl}${route}?login=${userName}`, this.httpOptions);\r\n    }\r\n\r\n    // Добавление задачи к проекту.\r\n    addTaskToProject(taskId: number, projectId: number): Observable<any> {\r\n      const route = '/project/addtasktoproject';\r\n      this.httpOptions.headers = new HttpHeaders();\r\n      return this.http.put(`${this.rootUrl}${route}?taskid=${taskId}&projectid=${projectId}`, this.httpOptions);\r\n    }\r\n\r\n    // Получение проекта.\r\n    getProject(projectId: number): Observable<any> {\r\n      const route = '/project/GetProject';\r\n      return this.http.get(`${this.rootUrl}${route}?projectId=${projectId}`);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Сервис события для подписки на событие несвязанных компонентов.\r\nexport class SharedEventService {\r\n\r\n  private emitChangeSource = new Subject<any>();\r\n  changeEmitted$ = this.emitChangeSource.asObservable();\r\n\r\n  private emitUserName = new Subject<any>();\r\n  userNameEmitted$ = this.emitUserName.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  // Событие нажатия на кнопку SignIn.\r\n  emitSignIn(change: any) {\r\n    this.emitChangeSource.next(change);\r\n  }\r\n\r\n  // Событие получение логина.\r\n  getUserName(change: any) {\r\n    this.emitUserName.next(change);\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { TaskModel } from './../classes/task.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Сервис представляет методы запросов для задач.\r\nexport class TaskManagerService {\r\n\r\n  private rootUrl = \"https://localhost:44376\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders()\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Запрос на получение всех задач.\r\n  getBoardTasks(): Observable<any> {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/board/getboardtasks';\r\n    return this.http.get(`${this.rootUrl}${route}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на получение задачи по id.\r\n  getTask(taskId: number): Observable<any> {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/gettask';\r\n    return this.http.get(`${this.rootUrl}${route}?taskid=${taskId}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на добавление задачи.\r\n  addTask(taskModel: TaskModel): Observable<any> {\r\n    const route = '/task/addtask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.post(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на удаление задачи по id.\r\n  deleteTask(taskId: number): Observable<any> {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/deletetask';\r\n    return this.http.delete(`${this.rootUrl}${route}?taskid=${taskId}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на изменение задачи.\r\n  changeTask(taskModel: TaskModel): Observable<any> {\r\n    const route = '/task/changetask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.put(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на добавление подзадачи.\r\n  addSubTask(taskModel: TaskModel, parentTaskId: number): Observable<any> {\r\n    const route = '/task/changetask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.put(`${this.rootUrl}${route}?parentTaskId=${parentTaskId}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на получение задач пользователя, в которыйх он является автором.\r\n  getUserTasks(username: string): Observable<any> {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/gettasksbyuser';\r\n    return this.http.get(`${this.rootUrl}${route}?loginId=${username}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на получение задач пользователя.\r\n  GetAssignedTasks(username: string): Observable<any> {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/GetAssignedTasks';\r\n    return this.http.get(`${this.rootUrl}${route}?userName=${username}`, this.httpOptions);\r\n  }\r\n}\r\n","import { AccountModel } from './../classes/account.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  readonly rootUrl = 'https://localhost:44376';\r\n  httpOptions = {\r\n    headers: new HttpHeaders()\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Отправляет post запрос на сервер для регистрации нового пользователя\r\n  registerUser(account: AccountModel): Observable<any> {\r\n    const reqHeader = new HttpHeaders({ 'No-Auth': 'True' });\r\n    return this.http.post(`${this.rootUrl}/identity/Register`, account, { headers: reqHeader });\r\n  }\r\n\r\n  // Отправляет post запрос для аутентификации существующего пользователя\r\n  userAuthentication(accountModel: AccountModel): Observable<any> {\r\n    const data = `username=${accountModel.UserName}&password=${accountModel.Password}&grant_type=password`;\r\n    const reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded', 'No-Auth': 'True' });\r\n    return this.http.post(`${this.rootUrl}/token`, data, { headers: reqHeader });\r\n  }\r\n\r\n  // Запрос на получение всех пользователей.\r\n  getUsers(): Observable<any> {\r\n    const route = '/identity/GetAllUserNames';\r\n    return this.http.get(`${this.rootUrl}${route}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}