{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/authGuard/auth.guard.ts","./src/app/authGuard/auth.interceptor.ts","./src/app/classes/account.model.ts","./src/app/classes/boardTask.model.ts","./src/app/classes/task.model.ts","./src/app/classes/user.model.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/main/_main/main.component.ts","./src/app/components/main/_main/main.component.html","./src/app/components/main/board/_board/board.component.ts","./src/app/components/main/board/_board/board.component.html","./src/app/components/main/main-menu/main-menu.component.ts","./src/app/components/main/main-menu/main-menu.component.html","./src/app/components/main/personal/personal.component.ts","./src/app/components/main/personal/personal.component.html","./src/app/components/main/user/sign-in/sign-in.component.ts","./src/app/components/main/user/sign-in/sign-in.component.html","./src/app/components/main/user/sign-up/sign-up.component.ts","./src/app/components/main/user/sign-up/sign-up.component.html","./src/app/components/main/user/user.component.ts","./src/app/components/main/user/user.component.html","./src/app/components/task/boardTask/boardTask.component.ts","./src/app/components/task/boardTask/boardTask.component.html","./src/app/components/task/task-form/task-form.component.ts","./src/app/components/task/task-form/task-form.component.html","./src/app/components/task/task/task.component.ts","./src/app/components/task/task/task.component.html","./src/app/components/task/user-task/user-task.component.ts","./src/app/components/task/user-task/user-task.component.html","./src/app/enums/priority.enum.ts","./src/app/services/app-data-storage.service.ts","./src/app/services/enum-to-arr.pipe.ts","./src/app/services/shared-event.service.ts","./src/app/services/task-manager.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { PersonalComponent } from './components/main/personal/personal.component';\r\nimport { BoardComponent } from './components/main/board/_board/board.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { MainComponent } from './components/main/_main/main.component';\r\nimport { UserComponent } from './components/main/user/user.component';\r\nimport { SignUpComponent } from './components/main/user/sign-up/sign-up.component';\r\nimport { SignInComponent } from './components/main/user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './authGuard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'sign-up',\r\n    component: UserComponent,\r\n    children: [{ path: '', component: SignUpComponent }],\r\n  },\r\n  {\r\n    path: 'sign-in',\r\n    component: UserComponent,\r\n    children: [{ path: '', component: SignInComponent }],\r\n  },\r\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\r\n  {\r\n    path: 'main',\r\n    component: MainComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {path: 'board', component: BoardComponent},\r\n      {path: 'personal', component: PersonalComponent}\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Gates';\r\n}\r\n","<div class=\"wrapper\">\r\n  <app-header></app-header>\r\n  <div class=\"main-container\">\r\n    <app-main-menu></app-main-menu>\r\n    <app-main></app-main>\r\n  </div>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { EnumToArrayPipe } from './services/enum-to-arr.pipe';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { SignUpComponent } from './components/main/user/sign-up/sign-up.component';\r\nimport { UserService } from './services/user.service';\r\nimport { UserComponent } from './components/main/user/user.component';\r\nimport { SignInComponent } from './components/main/user/sign-in/sign-in.component';\r\nimport { AuthGuard } from './authGuard/auth.guard';\r\nimport { AuthInterceptor } from './authGuard/auth.interceptor';\r\n\r\nimport { BoardTaskComponent } from './components/task/boardTask/boardTask.component';\r\nimport { TaskComponent } from './components/task/task/task.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MainComponent } from './components/main/_main/main.component';\r\nimport { MainMenuComponent } from './components/main/main-menu/main-menu.component';\r\nimport { BoardComponent } from './components/main/board/_board/board.component';\r\nimport { PersonalComponent } from './components/main/personal/personal.component';\r\nimport { UserTaskComponent } from './components/task/user-task/user-task.component';\r\nimport { TaskFormComponent } from './components/task/task-form/task-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    UserComponent,\r\n    SignInComponent,\r\n    BoardTaskComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    MainComponent,\r\n    MainMenuComponent,\r\n    BoardComponent,\r\n    TaskComponent,\r\n    PersonalComponent,\r\n    UserTaskComponent,\r\n    TaskFormComponent,\r\n    EnumToArrayPipe\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [UserService, AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n\r\n  // при наличии токена дает возможность перемещаться по сайту, иначе перенаправляет на модуль авторизации\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    if (localStorage.getItem('token') != null) {\r\n      return true;\r\n    }\r\n\r\n    this.router.navigate(['/main/sign-in']);\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpUserEvent,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router) {}\r\n\r\n  // перехватывает запросы пользователя, проверяя на наличие токена\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.headers.get('No-Auth') === 'True') {\r\n      return next.handle(req.clone());\r\n    }\r\n\r\n    if (localStorage.getItem('token') != null) {\r\n      const clonedreq = req.clone({\r\n        headers: req.headers.set(\r\n          'Authorization',\r\n          `Bearer ${localStorage.getItem('token')}`\r\n        ),\r\n      });\r\n      return next.handle(clonedreq);\r\n    } else {\r\n      this.router.navigateByUrl('/sign-in');\r\n    }\r\n  }\r\n}\r\n","// Модель аккаунт\r\nexport class AccountModel {\r\n  UserName: string;\r\n  Password: string;\r\n}\r\n","//Класс представляет модель задания для вывода на доску.\r\nexport class BoardTaskModel {\r\n  // Id задания.\r\n  TaskId: number;\r\n\r\n  // Название задания.\r\n  Title: string;\r\n\r\n  // Автор задания.\r\n  AuthorLogin: string;\r\n\r\n  // Описание задания.\r\n  Description: string;\r\n\r\n  // Группа задания.\r\n  Project: string;\r\n\r\n  // Дата дедлайна.\r\n  DeadlineDate: Date;\r\n\r\n  // Приоритет задания.\r\n  Priority: string = 'Trivial';\r\n\r\n  // Статус задания.\r\n  Status: string;\r\n}\r\n","//Класс представляет модель задания.\r\nexport class TaskModel {\r\n  // Уникальный идентификатор задания.\r\n  TaskId: number;\r\n\r\n  // Название задания.\r\n  Title: string;\r\n\r\n  // Описание задания.\r\n  Description: string;\r\n\r\n  // Автор задания.\r\n  AuthorLogin: string;\r\n\r\n  // Испольнитель задания\r\n  ExecutorLogin: string;\r\n\r\n  // Группа задания.\r\n  Project: string;\r\n\r\n  //Дата создания.\r\n  CreateDate: Date;\r\n\r\n  // Дата дедлайна.\r\n  DeadlineDate: Date;\r\n\r\n  // Подзадача.\r\n  UnderTask: TaskModel[];\r\n\r\n  // Приоритет задания.\r\n  Priority: string = 'Trivial';\r\n\r\n  // Статус задания.\r\n  Status: string = 'Await';\r\n\r\n  // Хэш-теги.\r\n  HashTags: string[];\r\n\r\n  // Комментарий.\r\n  Comments: string;\r\n}\r\n","import { AccountModel } from './account.model';\r\n\r\n// Модель пользователь\r\nexport class UserModel {\r\n  Account: AccountModel;\r\n  Role: string;\r\n  FirstName: string;\r\n  LastName: string;\r\n\r\n  constructor() {\r\n    this.Account = new AccountModel();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer wrapper\">\r\n\r\n</footer>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"header wrapper\">\r\n    <div>\r\n        <h1 class=\"header-title\">Gates</h1>\r\n    </div>\r\n</header>","import { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { SharedEventService } from 'src/app/services/shared-event.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements OnInit {\r\n  showTaskForm: boolean;\r\n  isLogged: boolean;\r\n  showTaskDetail: boolean = false;\r\n\r\n  constructor(\r\n    private appDataStorageService: AppDataStorageService,\r\n    private sharedEventService: SharedEventService\r\n  ) {\r\n    sharedEventService.taskDetailEmitted$.subscribe(id => console.log(\"main: \" + id));\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  showDetail(id: number) {\r\n    console.log('main detail' + id);\r\n    // this.showTaskDetail = true;\r\n  }\r\n\r\n  closeDetail(event: any) {\r\n    this.showTaskDetail = false;\r\n  }\r\n\r\n  closeTaskForm(event: any) {\r\n    this.showTaskForm = true;\r\n  }\r\n}\r\n","<main class=\"main\">\r\n    <div class=\"main-body\">\r\n        <router-outlet></router-outlet>\r\n        <div *ngIf=\"showTaskForm\" class=\"task-form\">\r\n            <app-task-form></app-task-form>\r\n        </div>\r\n        <div *ngIf=\"showTaskDetail\" class=\"task-detail\">\r\n            <app-task (closeEmitter)=\"closeDetail($event)\"></app-task>\r\n        </div>\r\n    </div>\r\n</main>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { BoardTaskModel } from 'src/app/classes/boardTask.model';\r\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { TaskModel } from 'src/app/classes/task.model';\r\n\r\n@Component({\r\n  selector: 'app-board',\r\n  templateUrl: './board.component.html',\r\n  styleUrls: ['./board.component.scss'],\r\n})\r\n\r\n// Компонент - доска для вывода задач.\r\nexport class BoardComponent implements OnInit {\r\n  constructor(\r\n    private taskManagerService: TaskManagerService,\r\n    private appDataStorageService: AppDataStorageService\r\n  ) {}\r\n\r\n  @Output() showDetailEmitter = new EventEmitter();\r\n\r\n  boardTasks: BoardTaskModel[] = [];\r\n  boardTask: BoardTaskModel;\r\n  showTaskDetail: boolean;\r\n  task: TaskModel;\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    this.showTaskDetail = false;\r\n\r\n    // Запрос на получение всех задач.\r\n    this.taskManagerService.getBoardTasks().subscribe((data: BoardTaskModel[]) => {\r\n      if (data) {\r\n        this.boardTasks = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Метод получает задачу по id.\r\n  getTaskById(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        this.task = data;\r\n        this.showTaskDetail = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Закрытие детализации задачи.\r\n  closeTaskDetail() {\r\n    this.showTaskDetail = false;\r\n  }\r\n}\r\n","<div class=\"board\">\r\n  <div>\r\n    <app-task\r\n      *ngIf=\"showTaskDetail\"\r\n      class=\"task-detail\"\r\n      (close)=\"closeTaskDetail()\"\r\n      [task]=\"task\"\r\n    ></app-task>\r\n  </div>\r\n  <div class=\"board__filter-bar\">\r\n    <input class=\"filter-input\" />\r\n  </div>\r\n  <div class=\"task-container\">\r\n    <app-board-task\r\n      *ngFor=\"let task of boardTasks\"\r\n      (taskIdEmitter)=\"getTaskById($event)\"\r\n      [boardTask]=\"task\"\r\n    ></app-board-task>\r\n  </div>\r\n</div>\r\n","import { AppDataStorageService } from './../../../services/app-data-storage.service';\r\nimport { SharedEventService } from './../../../services/shared-event.service';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.scss']\r\n})\r\nexport class MainMenuComponent implements OnInit {\r\n\r\n  isLogged: boolean = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private sharedEventService: SharedEventService,\r\n    private appDataStorageService: AppDataStorageService\r\n    ) {\r\n\r\n    // Подписка на событие Клик Sign-in.\r\n    sharedEventService.changeEmitted$.subscribe(logged => this.signIn(logged));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLogged = localStorage.getItem('token') ? true : false;\r\n  }\r\n\r\n  toBoard() {\r\n    this.router.navigate(['main/board'])\r\n  }\r\n\r\n  toPersonal() {\r\n    this.router.navigate(['main/personal'])\r\n  }\r\n\r\n  signOut() {\r\n    this.isLogged = false;\r\n    localStorage.clear();\r\n    this.router.navigate(['sign-in']);\r\n  }\r\n\r\n  signIn(logged: boolean) {\r\n    this.isLogged = logged;\r\n  }\r\n}\r\n","<div class=\"main-menu\">\r\n    <div class=\"main-menu__button\" (click)=\"toBoard()\">\r\n        <a class=\"main-menu__button__text\">Board</a>\r\n    </div>\r\n    <div class=\"main-menu__button\" (click)=\"toPersonal()\">\r\n        <a class=\"main-menu__button__text\">Cabinet</a>\r\n    </div>\r\n    <button *ngIf=\"isLogged\" class=\"sign\" (click)=\"signOut()\"></button>\r\n</div>\r\n","import { TaskModel } from './../../../classes/task.model';\r\nimport { TaskManagerService } from './../../../services/task-manager.service';\r\nimport { BoardTaskModel } from './../../../classes/boardTask.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  templateUrl: './personal.component.html',\r\n  styleUrls: ['./personal.component.scss'],\r\n})\r\nexport class PersonalComponent implements OnInit {\r\n  constructor(private taskManagerService: TaskManagerService) {}\r\n\r\n  userTasks: BoardTaskModel[] = [];\r\n  task: TaskModel;\r\n  // Флаг - показать форму задачи.\r\n  showTaskForm: boolean;\r\n  // Флаг - показать детализацию задачи.\r\n  showTaskDetail: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.showTaskForm = false;\r\n    this.showTaskDetail = false;\r\n\r\n    // Извлечение логина.\r\n    const username = localStorage.getItem('username');\r\n    // Получение задач пользователя по логину.\r\n    this.taskManagerService\r\n      .getUserTasks(username)\r\n      .subscribe((data: BoardTaskModel[]) => {\r\n        if (data) {\r\n          this.userTasks = data;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Метод получает задачу по id.\r\n  getTaskById(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        // вывести задачу.\r\n        this.showTaskDetail = true;\r\n        this.task = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Изменение задачи.\r\n  updateTask(taskId: number) {\r\n    this.taskManagerService.getTask(taskId).subscribe((data: TaskModel) => {\r\n      if (data) {\r\n        this.task = data;\r\n        this.showTaskForm = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Созание задачи.\r\n  createTask() {\r\n    this.task = new TaskModel();\r\n    this.showTaskForm = true;\r\n  }\r\n\r\n  // Закрытие формы задачи.\r\n  closeTaskForm() {\r\n    this.showTaskForm = false;\r\n  }\r\n\r\n  // Закрытие детализации задачи.\r\n  closeTaskDetail() {\r\n    this.showTaskDetail = false;\r\n  }\r\n\r\n  // Создание проекта.\r\n  createProject() {}\r\n}\r\n","<div class=\"personal-container\">\r\n  <app-task\r\n    *ngIf=\"showTaskDetail\"\r\n    class=\"task-detail\"\r\n    (close)=\"closeTaskDetail()\"\r\n    [task]=\"task\"\r\n  ></app-task>\r\n  <app-task-form\r\n    *ngIf=\"showTaskForm\"\r\n    class=\"task-form\"\r\n    (close)=\"closeTaskForm()\"\r\n    [changeTask]=\"task\"\r\n  ></app-task-form>\r\n  <div class=\"personal-task\">\r\n    <div class=\"title\">\r\n      <h3 class=\"title-text\">My tasks</h3>\r\n    </div>\r\n    <div class=\"task-control-container\">\r\n      <button class=\"task-control\" (click)=\"createTask()\">Create task</button>\r\n    </div>\r\n    <div class=\"task-container\">\r\n      <app-user-task\r\n        *ngFor=\"let task of userTasks\"\r\n        (taskIdEmitter)=\"getTaskById($event)\"\r\n        (updateTaskEmitter)=\"updateTask($event)\"\r\n        [task]=\"task\"\r\n      ></app-user-task>\r\n    </div>\r\n  </div>\r\n  <div class=\"personal-project\">\r\n    <div class=\"title\">\r\n      <h3 class=\"title-text\">My projects</h3>\r\n    </div>\r\n    <div class=\"task-control-container\">\r\n      <button class=\"task-control\" (click)=\"createProject()\">\r\n        Create project\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { SharedEventService } from './../../../../services/shared-event.service';\r\nimport { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { AccountModel } from './../../../../classes/account.model';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { UserService } from '../../../../services/user.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\n\r\nexport class SignInComponent implements OnInit {\r\n\r\n  // Событие sign-in\r\n  @Output() loginEmitter: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  isLoginError: boolean = false;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private sharedEventService: SharedEventService\r\n  ) { }\r\n\r\n  accountModel: AccountModel = new AccountModel();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.userAuthentication(this.accountModel).subscribe((data: any) => {\r\n      localStorage.setItem('token', data.access_token);\r\n      localStorage.setItem('username', this.accountModel.UserName);\r\n      this.router.navigate(['/main']);\r\n\r\n      // Отправка события в общий сервис событий.\r\n      this.sharedEventService.emitSignIn(true);\r\n    },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n      });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isLoginError\" class=\"red-text center error-message\">\r\n  Incorrect Email or Password\r\n</div>\r\n\r\n<form \r\n  #loginForm=\"ngForm\" \r\n  class=\"col s12 white\" \r\n  (ngSubmit)=\"onSubmit()\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input \r\n        type=\"text\" \r\n        name=\"Login\"\r\n        [(ngModel)]=\"accountModel.UserName\"\r\n        minlength=\"2\"\r\n        required>\r\n      <label data-error=\"Invalid email\">Login</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input \r\n        type=\"password\" \r\n        name=\"Password\" \r\n        [(ngModel)]=\"accountModel.Password\"\r\n        minlength=\"4\"\r\n        required>\r\n      <label data-error=\"Invalid password\">Password</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <button \r\n        [disabled]=\"!loginForm.valid\" \r\n        class=\"btn-large btn-submit\" \r\n        type=\"submit\">Login</button>\r\n    </div>\r\n  </div>\r\n\r\n</form>","import { AccountModel } from './../../../../classes/account.model';\r\nimport { Component, OnInit, ɵConsole } from '@angular/core';\r\nimport { UserModel } from '../../../../classes/user.model';\r\nimport { UserService } from '../../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  userModel: UserModel = new UserModel();\r\n  buttonName: string;\r\n  confirmPassword: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.resetForm();\r\n    this.buttonName = 'Sign ';\r\n  }\r\n\r\n  // Проверяет на пустые поля и соответствие пароля и его подтверждения\r\n  checkFields(): boolean {\r\n    if (this.userModel.Account.UserName !== '' &&\r\n      this.userModel.Account.Password !== '' &&\r\n      this.confirmPassword !== '' &&\r\n      this.userModel.FirstName !== '' &&\r\n      this.userModel.LastName !== '' &&\r\n      this.userModel.Account.Password === this.confirmPassword) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // очищает форму\r\n  resetForm(): void {    \r\n    this.userModel.Account.UserName = '';\r\n    this.userModel.Account.Password = '';\r\n    this.userModel.FirstName = '';\r\n    this.userModel.LastName = '';\r\n    this.confirmPassword = '';\r\n  }\r\n\r\n  // срабатывает при нажатии кнопки 'signUp'\r\n  onSubmit(): void {\r\n    if (this.checkFields()) {\r\n      this.buttonName = 'Sending Data';      \r\n      this.userService.registerUser(this.userModel).subscribe(data => {\r\n\r\n        // добавить сообщение об успешной регистрации\r\n        this.resetForm();\r\n      },\r\n        // вывести нормальное сообщение об ошибке\r\n        error => {\r\n          this.buttonName = 'Error';\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.buttonName = 'Error';\r\n    }\r\n  }\r\n}\r\n","<form class=\"col s12 white\">\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <input \r\n      class=\"validate\" \r\n      type=\"text\" \r\n      name=\"Login\" \r\n      [(ngModel)]=\"userModel.Account.UserName\" \r\n      minlength=\"3\"\r\n      required>\r\n      <label>Login</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s6\">\r\n      <input \r\n        class=\"validate\" \r\n        type=\"password\" \r\n        name=\"Password\" \r\n        minlength=\"4\"\r\n        [(ngModel)]=\"userModel.Account.Password\"\r\n        required>\r\n      <label>Password</label>\r\n      <span *ngIf=\"(userModel.Account.Password.length < 4)\" class=\"wrong\">требуется 4 символа и болеее</span>\r\n    </div>\r\n  \r\n    <div class=\"input-field col s6\">\r\n      <input \r\n        class=\"validate\" \r\n        type=\"password\" \r\n        name=\"confirmPassword\" \r\n        [(ngModel)]=\"confirmPassword\" \r\n        required minlength=\"4\">\r\n      <label>Confirm password</label>\r\n      <span *ngIf=\"userModel.Account.Password !== confirmPassword\" class=\"wrong\">Не совпадает с паролем</span>\r\n    </div>    \r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s6\">\r\n      <input \r\n        type=\"text\" \r\n        name=\"FirstName\" \r\n        [(ngModel)]=\"userModel.FirstName\" \r\n        required>\r\n      <label>First Name</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col s6\">\r\n      <input \r\n        type=\"text\" \r\n        name=\"LastName\" \r\n        [(ngModel)]=\"userModel.LastName\" \r\n        required>\r\n      <label>Last Name</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <button \r\n        [disabled]=\"!checkFields()\" \r\n        class=\"btn-large btn-submit\" \r\n        type=\"submit\" \r\n        (click)=\"onSubmit()\">{{buttonName}}</button>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n","import { SharedEventService } from './../../../services/shared-event.service';\r\nimport { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  @Output() signInEmitter: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() signUpEmitter: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  SignIn(logged: boolean) {\r\n    console.log('user');\r\n  }\r\n\r\n  emitSignUp(event: boolean) {\r\n    this.signUpEmitter.emit(event);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col s8 offset-s2\">\r\n      <div class=\"card grey lighten-2\">\r\n        <div class=\"card-tabs\">\r\n          <ul class=\"tabs tabs-fixed-width tabs-transparent\">\r\n            <li class=\"tab\">\r\n              <a routerLink='/sign-in' routerLinkActive='active'>Sign In</a>\r\n            </li>\r\n            <li class=\"tab\">\r\n              <a routerLink='/sign-up' routerLinkActive='active'>Sign Up</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"card-content white\">\r\n          <div class=\"row\">\r\n            <router-outlet></router-outlet>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { BoardTaskModel } from 'src/app/classes/boardTask.model';\r\nimport { SharedEventService } from 'src/app/services/shared-event.service';\r\n\r\n@Component({\r\n  selector: 'app-board-task',\r\n  templateUrl: './boardTask.component.html',\r\n  styleUrls: ['./boardTask.component.scss'],\r\n})\r\n\r\n// Компонент - задача для вывода на доску.\r\nexport class BoardTaskComponent implements OnInit {\r\n  // Входное свойство для полей компонента.\r\n  @Input() boardTask: BoardTaskModel;\r\n\r\n  // Выходное свойство - идентификатор задачи.\r\n  @Output() taskIdEmitter = new EventEmitter();\r\n\r\n  priorityClass: string;\r\n  author: string;\r\n\r\n  constructor() {}\r\n\r\n  // Инициализация компонента.\r\n  ngOnInit(): void {\r\n    if (this.boardTask) {\r\n      const priority = this.boardTask.Priority.toLowerCase();\r\n      this.priorityClass = `task-${priority}`;\r\n      this.author = this.boardTask.AuthorLogin.substr(0, 2);\r\n    }\r\n  }\r\n\r\n  // Метод вызывается по клику на задаче. Отдает в общий сервис id задачи.\r\n  boardTaskOnClick() {\r\n    this.taskIdEmitter.emit(this.boardTask.TaskId);\r\n  }\r\n}\r\n","<div [class]=\"priorityClass\" class=\"task\" (click)=\"boardTaskOnClick()\">\r\n  <div class=\"task__description\">\r\n    <p>{{ boardTask.Description }}</p>\r\n  </div>\r\n  <div class=\"task__group\">\r\n    <p>{{ boardTask.Project }}</p>\r\n  </div>\r\n  <div class=\"task__footer\">\r\n    <div class=\"task__footer__status\">\r\n      <p>{{ boardTask.Status }}</p>\r\n    </div>\r\n    <div class=\"task__footer__deadlineDate\">\r\n      <p>{{ boardTask.DeadlineDate | date: 'mediumDate' }}</p>\r\n    </div>\r\n    <div class=\"task__footer__author\">\r\n      <p>{{ author }}</p>\r\n    </div>\r\n  </div>\r\n</div>","import { UserService } from './../../../services/user.service';\r\nimport { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { TaskModel } from './../../../classes/task.model';\r\nimport { Priority } from './../../../enums/priority.enum';\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.scss'],\r\n})\r\n\r\n// Компонент - форма для ввода параметров задачи.\r\nexport class TaskFormComponent implements OnInit {\r\n\r\n  // Свойство - id задачи родителя в случае добавления подзадачи.\r\n  @Input() parenTaskId: string;\r\n  // Свойство - задача на изменение.\r\n  @Input() changeTask: TaskModel;\r\n\r\n  // Выходное свойство - закрытие окна.\r\n  @Output() close = new EventEmitter();\r\n\r\n  // Форма задачи.\r\n  taskFormGroup: FormGroup;\r\n  // Поле для выпадающего списка Priority.\r\n  priority = Priority;\r\n  // Поле для заполнения данными при создании задачи.\r\n  task: TaskModel = new TaskModel();\r\n  // Массив логинов пользователей.\r\n  usersList: [] = [];\r\n  // Текущий приоритет задачи.\r\n  priorityText: string;\r\n  // Флаг для полей readonly.\r\n  readonly: boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private taskManager: TaskManagerService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.readonly = false;\r\n    this.priorityText = this.task.Priority;\r\n    this.initForm();\r\n    console.log(this.readonly);\r\n    console.log(this.changeTask);\r\n  }\r\n\r\n  // Инициализация формы\r\n  initForm() {\r\n    this.taskFormGroup = this.formBuilder.group({\r\n      title: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.pattern('[a-zA-Zа-яА-Я0-9]+'),\r\n          Validators.minLength(3),\r\n          Validators.maxLength(20),\r\n        ],\r\n      ],\r\n      description: ['', [Validators.required, Validators.maxLength(200)]],\r\n      executor: ['', [Validators.required]],\r\n      project: ['', []],\r\n      deadlineDate: ['', [Validators.required]],\r\n      priority: ['', []],\r\n    });\r\n\r\n    const controls = this.taskFormGroup.controls;\r\n\r\n    if (this.changeTask.TaskId) {\r\n      this.readonly = true;\r\n      this.priorityText = this.changeTask.Priority;\r\n      controls.title.setValue(this.changeTask.Title);\r\n      controls.description.setValue(this.changeTask.Description);\r\n      controls.executor.setValue(this.changeTask.ExecutorLogin);\r\n      controls.priority.setValue(this.changeTask.Priority);\r\n      controls.deadlineDate.setValue(this.changeTask.DeadlineDate);\r\n    }\r\n  }\r\n\r\n  // Отправка задачи на сервер\r\n  onSubmit() {\r\n    const controls = this.taskFormGroup.controls;\r\n\r\n    this.task.AuthorLogin = localStorage.getItem('username');\r\n    this.task.Title = controls.title.value;\r\n    this.task.Description = controls.description.value;\r\n    this.task.DeadlineDate = controls.deadlineDate.value;\r\n\r\n    if (this.changeTask) {\r\n      this.taskManager.changeTask(this.task).subscribe((data) => {\r\n        console.log('change task');\r\n      });\r\n    } else {\r\n      this.taskManager.addTask(this.task).subscribe((data) => {\r\n        console.log('add task');\r\n      });\r\n    }\r\n\r\n    this.closeForm();\r\n  }\r\n\r\n  // Выбор приоритета задачи в выпадающем списке.\r\n  pickPriority(p: string) {\r\n    this.priorityText = p;\r\n  }\r\n\r\n  // Получение списка польтзователей\r\n  getUsers() {\r\n    this.userService.getLoginOfUsers().subscribe((data: []) => {\r\n      if (data) {\r\n        this.usersList = data;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Закрытие окна\r\n  closeForm() {\r\n    this.close.emit();\r\n  }\r\n}\r\n","<div class=\"task-form-wrapper\">\r\n    <form class=\"task-form\" [formGroup]=\"taskFormGroup\" (submit)=\"onSubmit()\" action=\"#\" method=\"POST\">\r\n        <input class=\"task-form-input\" formControlName=\"title\" placeholder=\"Title\" [readonly]=\"readonly\">\r\n        <textarea class=\"task-form-input description\" formControlName=\"description\"\r\n            placeholder=\"Description\" [readonly]=\"readonly\"></textarea>\r\n        <input class=\"task-form-input\" formControlName=\"executor\" placeholder=\"Executor\" (click)=\"getUsers()\">\r\n        <input class=\"task-form-input\" formControlName=\"project\" placeholder=\"Project\">\r\n        <input class=\"task-form-input\" formControlName=\"deadlineDate\" placeholder=\"Deadline date\">\r\n        <input class=\"hide\" formControlName=\"priority\">\r\n        <ul class=\"task-form-list\">{{ priorityText }}\r\n            <li *ngFor=\"let p of priority | enumToArray\" class=\"list-option\" (click)=\"pickPriority(p)\">{{ p }}</li>\r\n        </ul>\r\n        <div class=\"button-container\">\r\n            <input class=\"button\" type=\"submit\" value=\"Submit\">\r\n            <button class=\"button\" (click)=\"closeForm()\" type=\"button\" >Chancel</button>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { TaskModel } from '../../../classes/task.model';\r\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { AppDataStorageService } from 'src/app/services/app-data-storage.service';\r\nimport { SharedEventService } from 'src/app/services/shared-event.service';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.scss'],\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  constructor(\r\n    private appDataStorageService: AppDataStorageService,\r\n    private sharedEventService: SharedEventService\r\n  ) {}\r\n\r\n  @Input() task: TaskModel;\r\n  @Output() close = new EventEmitter();\r\n\r\n  project: string;\r\n\r\n  ngOnInit(): void {\r\n    this.project = this.task.Project ? ` : ${this.task.Project}` : '';\r\n  }\r\n\r\n  // Метод возвращает комментарии задачи.\r\n  getComments() {\r\n    console.log(this.task.TaskId);\r\n  }\r\n\r\n  // Метод отсылает хэш-тег\r\n  sendHashTag(event: any) {\r\n    console.log(event.target.innerText);\r\n  }\r\n\r\n  // Метод закрывает окно детализации задачи\r\n  closeTaskDetail() {\r\n    this.close.emit();\r\n  }\r\n}\r\n","<div class=\"task-wrapper\">\r\n    <div class=\"task-container\">\r\n        <div class=\"task-title\">\r\n            <p class=\"task-title__text\">{{ task.Title }}{{ project }}</p>\r\n            <div class=\"close\" (click)=\"closeTaskDetail()\"></div>\r\n        </div>\r\n        <div class=\"task-description\">\r\n            <p class=\"task-description__text\">{{ task.Description }}</p>\r\n            <a class=\"task-hash-tags__tags\" *ngFor=\"let hashTag of task.HashTags\"\r\n                (click)=\"sendHashTag($event)\">{{ hashTag }}</a>\r\n        </div>\r\n        <div class=\"task-author-executor\">\r\n            <p class=\"task-author name\"><span class=\"span\">Author:</span> {{ task.AuthorLogin }}</p>\r\n            <p class=\"task-executor name\"><span class=\"span\">Executor:</span> {{ task.ExecutorLogin }}</p>\r\n        </div>\r\n        <div class=\"task-status\">\r\n            <p class=\"task-status__text\"><span class=\"span\">Status:</span> {{ task.Status }}</p>\r\n        </div>\r\n        <div class=\"task-priority\">\r\n            <p class=\"task-priority__text\"><span class=\"span\">Priority:</span> {{ task.Priority }}</p>\r\n        </div>\r\n        <div class=\"task-date\">\r\n            <p class=\"task-create date\"><span class=\"span\">Creation date:</span>\r\n                {{ task.CreateDate | date: 'mediumDate' }}</p>\r\n            <p class=\"task-deadline date\"><span class=\"span\">Finish before:</span>\r\n                {{ task.DeadlineDate | date: 'mediumDate' }}</p>\r\n        </div>\r\n        <button class=\"task-comments\" (click)=\"getComments()\">Show comments.</button>\r\n        <div class=\"comments\">\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { TaskManagerService } from 'src/app/services/task-manager.service';\r\nimport { BoardTaskModel } from './../../../classes/boardTask.model';\r\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-task',\r\n  templateUrl: './user-task.component.html',\r\n  styleUrls: ['./user-task.component.scss']\r\n})\r\nexport class UserTaskComponent implements OnInit {\r\n\r\n  @Output() taskIdEmitter = new EventEmitter();\r\n  @Output() updateTaskEmitter = new EventEmitter();\r\n\r\n  constructor(private taskManagerService: TaskManagerService) { }\r\n\r\n  @Input() task: BoardTaskModel = new BoardTaskModel();\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.task);\r\n  }\r\n\r\n  // Метод вызывается по клику на задаче. Отдает на выход id задачи.\r\n  onClickUserTask() {\r\n    this.taskIdEmitter.emit(this.task.TaskId);\r\n  }\r\n\r\n  deleteTask() {\r\n    this.taskManagerService.deleteTask(this.task.TaskId).subscribe((data: boolean) => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n  // Изменение задачи. На выходное свойство подается id задачи.\r\n  updateTask() {\r\n    this.updateTaskEmitter.emit(this.task.TaskId);\r\n  }\r\n}\r\n","<div class=\"user-task\">\r\n    <div class=\"user-task-container\" (click)=\"onClickUserTask()\">\r\n        <div class=\"title container\">\r\n            <p class=\"text\">{{ task.Title }}</p>\r\n        </div>\r\n        <div class=\"description container\">\r\n            <p class=\"description__text text\">{{ task.Description }}</p>\r\n        </div>\r\n        <div class=\"status container\">\r\n            <p class=\"text\">{{ task.Status }}</p>\r\n        </div>\r\n        <div class=\"priority container\">\r\n            <p class=\"text\">{{ task.Priority }}</p>\r\n        </div>\r\n        <div class=\"deadline-date container\">\r\n            <p class=\"text\">{{ task.DeadlineDate | date: 'mediumDate' }}</p>\r\n        </div>\r\n    </div>\r\n    <button class=\"change button\" (click)=\"updateTask()\"></button>\r\n    <button class=\"delete button\" (click)=\"deleteTask()\"></button>\r\n</div>\r\n","// Перечисление - приоритет задачи.\r\nexport enum Priority {\r\n    Trivial = 'Trivial',\r\n    Minor = 'Minor',\r\n    Major = 'Major',\r\n    Critical = 'Critical',\r\n    Blocker = 'Blocker'\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppDataStorageService {\r\n\r\n  appStorage: any;\r\n\r\n  constructor() {\r\n\r\n    this.appStorage = {};\r\n\r\n  }\r\n\r\n  // Функция добавляет данные ключ:значение в хранилище.\r\n  setItem(key: string, value: any) {\r\n    this.appStorage.key = value;\r\n  }\r\n\r\n  // Функция возвращает значение по ключу. Если ключа не существует, возвращает null.\r\n  getItem(key: string): any {\r\n    if (this.appStorage.key) {\r\n      return this.appStorage.key;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // Удаляет все жанные из хранилища.\r\n  clear() {\r\n    this.appStorage = {};\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'enumToArray' })\r\n\r\n// Класс возвращает массив ключей объекта.\r\nexport class EnumToArrayPipe implements PipeTransform {\r\n    transform(data: Object) {\r\n        return Object.values(data);\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Сервис события для подписки на событие несвязанных компонентов.\r\nexport class SharedEventService {\r\n\r\n  private emitChangeSource = new Subject<any>();\r\n  changeEmitted$ = this.emitChangeSource.asObservable();\r\n\r\n  // private emitShowForm = new Subject<any>();\r\n  // showFormEmitted$ = this.emitShowForm.asObservable();\r\n\r\n  private emitTaskDetailClick = new Subject<any>();\r\n  taskDetailEmitted$ = this.emitTaskDetailClick.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  // Событие нажатия на кнопку SignIn.\r\n  emitSignIn(change: any) {\r\n    this.emitChangeSource.next(change);\r\n  }\r\n\r\n  // // Событие show task form.\r\n  // emitShowTaskForm(change: any) {\r\n  //   this.emitShowForm.next(change);\r\n  // }\r\n\r\n  // Событие клик на задаче доски.\r\n  emitTaskDetail(change: any) {\r\n    this.emitTaskDetailClick.next(change);\r\n  }\r\n}\r\n","import { TaskModel } from './../classes/task.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n// Сервис представляет методы запросов для задач.\r\nexport class TaskManagerService {\r\n\r\n  private rootUrl = \"https://localhost:44376\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders()\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Запрос на получение всех задач.\r\n  getBoardTasks() {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/board/getboardtasks';\r\n    return this.http.get(`${this.rootUrl}${route}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на получение задачи по id.\r\n  getTask(taskId: number) {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/gettask';\r\n    return this.http.get(`${this.rootUrl}${route}?taskid=${taskId}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на добавление задачи.\r\n  addTask(taskModel: TaskModel) {\r\n    const route = '/task/addtask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.post(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на удаление задачи по id.\r\n  deleteTask(taskId: number) {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/deletetask';\r\n    return this.http.delete(`${this.rootUrl}${route}?taskid=${taskId}`, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на изменение задачи.\r\n  changeTask(taskModel: TaskModel) {\r\n    const route = '/task/changetask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.put(`${this.rootUrl}${route}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на добавление подзадачи.\r\n  addSubTask(taskModel: TaskModel, parentTaskId: number) {\r\n    const route = '/task/changetask';\r\n    const body = taskModel;\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    return this.http.put(`${this.rootUrl}${route}?parentTaskId=${parentTaskId}`, body, this.httpOptions);\r\n  }\r\n\r\n  // Запрос на получение задач пользователя.\r\n  getUserTasks(username: string) {\r\n    this.httpOptions.headers = new HttpHeaders();\r\n    const route = '/task/gettasksbyuser';\r\n    return this.http.get(`${this.rootUrl}${route}?username=${username}`, this.httpOptions);\r\n  }\r\n}\r\n","import { AccountModel } from './../classes/account.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserModel } from '../classes/user.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  readonly rootUrl = 'https://localhost:44376';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Отправляет post запрос на сервер для регистрации нового пользователя\r\n  registerUser(user: UserModel): Observable<object> {\r\n    return this.http.post(this.rootUrl + '', user);\r\n  }\r\n\r\n  // Отправляет post запрос для аутентификации существующего пользователя\r\n  userAuthentication(accountModel: AccountModel): Observable<object> {\r\n    const data = `username=${accountModel.UserName}&password=${accountModel.Password}&grant_type=password`;\r\n    const reqHeader = new HttpHeaders({ 'Content-Type': 'application/x-www-urlencoded', 'No-Auth': 'True' });\r\n    return this.http.post(`${this.rootUrl}/token`, data, { headers: reqHeader });\r\n  }\r\n\r\n  getLoginOfUsers(): Observable<object> {\r\n    const route = '/user/getusers';\r\n    return this.http.get(`${this.rootUrl}${route}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}